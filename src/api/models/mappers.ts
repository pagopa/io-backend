/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */


export const ProblemJson = {
  required: false,
  serializedName: 'ProblemJson',
  type: {
    name: 'Composite',
    className: 'ProblemJson',
    modelProperties: {
      type: {
        required: false,
        serializedName: 'type',
        defaultValue: 'about:blank',
        type: {
          name: 'String'
        }
      },
      title: {
        required: false,
        serializedName: 'title',
        type: {
          name: 'String'
        }
      },
      status: {
        required: false,
        serializedName: 'status',
        type: {
          name: 'Number'
        }
      },
      detail: {
        required: false,
        serializedName: 'detail',
        type: {
          name: 'String'
        }
      },
      instance: {
        required: false,
        serializedName: 'instance',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const MessageContent = {
  required: false,
  serializedName: 'MessageContent',
  type: {
    name: 'Composite',
    className: 'MessageContent',
    modelProperties: {
      subject: {
        required: false,
        serializedName: 'subject',
        type: {
          name: 'String'
        }
      },
      markdown: {
        required: true,
        serializedName: 'markdown',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const NewMessageDefaultAddresses = {
  required: false,
  serializedName: 'NewMessageDefaultAddresses',
  type: {
    name: 'Composite',
    className: 'NewMessageDefaultAddresses',
    modelProperties: {
      email: {
        required: false,
        serializedName: 'email',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const NewMessage = {
  required: false,
  serializedName: 'NewMessage',
  type: {
    name: 'Composite',
    className: 'NewMessage',
    modelProperties: {
      timeToLive: {
        required: false,
        serializedName: 'time_to_live',
        type: {
          name: 'Number'
        }
      },
      content: {
        required: true,
        serializedName: 'content',
        type: {
          name: 'Composite',
          className: 'MessageContent'
        }
      },
      defaultAddresses: {
        required: false,
        serializedName: 'default_addresses',
        type: {
          name: 'Composite',
          className: 'NewMessageDefaultAddresses'
        }
      }
    }
  }
};

export const NotificationStatus = {
  required: false,
  serializedName: 'NotificationStatus',
  type: {
    name: 'Composite',
    className: 'NotificationStatus',
    modelProperties: {
      email: {
        required: false,
        serializedName: 'email',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const CreatedMessageWithContent = {
  required: false,
  serializedName: 'CreatedMessageWithContent',
  type: {
    name: 'Composite',
    className: 'CreatedMessageWithContent',
    modelProperties: {
      id: {
        required: false,
        serializedName: 'id',
        type: {
          name: 'String'
        }
      },
      fiscalCode: {
        required: true,
        serializedName: 'fiscal_code',
        type: {
          name: 'String'
        }
      },
      timeToLive: {
        required: false,
        serializedName: 'time_to_live',
        type: {
          name: 'Number'
        }
      },
      content: {
        required: false,
        serializedName: 'content',
        type: {
          name: 'Composite',
          className: 'MessageContent'
        }
      },
      senderServiceId: {
        required: true,
        serializedName: 'sender_service_id',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const CreatedMessageWithoutContent = {
  required: false,
  serializedName: 'CreatedMessageWithoutContent',
  type: {
    name: 'Composite',
    className: 'CreatedMessageWithoutContent',
    modelProperties: {
      id: {
        required: false,
        serializedName: 'id',
        type: {
          name: 'String'
        }
      },
      fiscalCode: {
        required: true,
        serializedName: 'fiscal_code',
        type: {
          name: 'String'
        }
      },
      timeToLive: {
        required: false,
        serializedName: 'time_to_live',
        type: {
          name: 'Number'
        }
      },
      senderServiceId: {
        required: true,
        serializedName: 'sender_service_id',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const MessageResponseWithContent = {
  required: false,
  serializedName: 'MessageResponseWithContent',
  type: {
    name: 'Composite',
    className: 'MessageResponseWithContent',
    modelProperties: {
      message: {
        required: true,
        serializedName: 'message',
        type: {
          name: 'Composite',
          className: 'CreatedMessageWithContent'
        }
      },
      notification: {
        required: false,
        serializedName: 'notification',
        type: {
          name: 'Composite',
          className: 'NotificationStatus'
        }
      }
    }
  }
};

export const MessageResponseWithoutContent = {
  required: false,
  serializedName: 'MessageResponseWithoutContent',
  type: {
    name: 'Composite',
    className: 'MessageResponseWithoutContent',
    modelProperties: {
      message: {
        required: true,
        serializedName: 'message',
        type: {
          name: 'Composite',
          className: 'CreatedMessageWithoutContent'
        }
      },
      notification: {
        required: false,
        serializedName: 'notification',
        type: {
          name: 'Composite',
          className: 'NotificationStatus'
        }
      }
    }
  }
};

export const PaginationResponse = {
  required: false,
  serializedName: 'PaginationResponse',
  type: {
    name: 'Composite',
    className: 'PaginationResponse',
    modelProperties: {
      pageSize: {
        required: false,
        serializedName: 'page_size',
        constraints: {
          InclusiveMinimum: 1
        },
        type: {
          name: 'Number'
        }
      },
      next: {
        required: false,
        serializedName: 'next',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const LimitedProfile = {
  required: false,
  serializedName: 'LimitedProfile',
  type: {
    name: 'Composite',
    className: 'LimitedProfile',
    modelProperties: {
      preferredLanguages: {
        required: false,
        serializedName: 'preferred_languages',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'stringElementType',
              type: {
                name: 'String'
              }
          }
        }
      }
    }
  }
};

export const ExtendedProfile = {
  required: false,
  serializedName: 'ExtendedProfile',
  type: {
    name: 'Composite',
    className: 'ExtendedProfile',
    modelProperties: {
      email: {
        required: false,
        serializedName: 'email',
        type: {
          name: 'String'
        }
      },
      preferredLanguages: {
        required: false,
        serializedName: 'preferred_languages',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'stringElementType',
              type: {
                name: 'String'
              }
          }
        }
      },
      isInboxEnabled: {
        required: false,
        serializedName: 'is_inbox_enabled',
        type: {
          name: 'Boolean'
        }
      },
      version: {
        required: false,
        serializedName: 'version',
        type: {
          name: 'Number'
        }
      }
    }
  }
};

export const Service = {
  required: false,
  serializedName: 'Service',
  type: {
    name: 'Composite',
    className: 'Service',
    modelProperties: {
      serviceId: {
        required: true,
        serializedName: 'service_id',
        type: {
          name: 'String'
        }
      },
      serviceName: {
        required: true,
        serializedName: 'service_name',
        type: {
          name: 'String'
        }
      },
      organizationName: {
        required: true,
        serializedName: 'organization_name',
        type: {
          name: 'String'
        }
      },
      departmentName: {
        required: true,
        serializedName: 'department_name',
        type: {
          name: 'String'
        }
      },
      authorizedCidrs: {
        required: true,
        serializedName: 'authorized_cidrs',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'stringElementType',
              type: {
                name: 'String'
              }
          }
        }
      },
      authorizedRecipients: {
        required: true,
        serializedName: 'authorized_recipients',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'stringElementType',
              type: {
                name: 'String'
              }
          }
        }
      },
      version: {
        required: false,
        serializedName: 'version',
        type: {
          name: 'Number'
        }
      },
      id: {
        required: false,
        serializedName: 'id',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const ServicePublic = {
  required: false,
  serializedName: 'ServicePublic',
  type: {
    name: 'Composite',
    className: 'ServicePublic',
    modelProperties: {
      serviceId: {
        required: true,
        serializedName: 'service_id',
        type: {
          name: 'String'
        }
      },
      serviceName: {
        required: true,
        serializedName: 'service_name',
        type: {
          name: 'String'
        }
      },
      organizationName: {
        required: true,
        serializedName: 'organization_name',
        type: {
          name: 'String'
        }
      },
      departmentName: {
        required: true,
        serializedName: 'department_name',
        type: {
          name: 'String'
        }
      },
      version: {
        required: false,
        serializedName: 'version',
        type: {
          name: 'Number'
        }
      }
    }
  }
};

export const GetMessagesByUserOKResponse = {
  required: false,
  serializedName: 'GetMessagesByUserOKResponse',
  type: {
    name: 'Composite',
    className: 'GetMessagesByUserOKResponse',
    modelProperties: {
      pageSize: {
        required: false,
        serializedName: 'page_size',
        constraints: {
          InclusiveMinimum: 1
        },
        type: {
          name: 'Number'
        }
      },
      next: {
        required: false,
        serializedName: 'next',
        type: {
          name: 'String'
        }
      },
      items: {
        required: false,
        serializedName: 'items',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'CreatedMessageWithoutContentElementType',
              type: {
                name: 'Composite',
                className: 'CreatedMessageWithoutContent'
              }
          }
        }
      }
    }
  }
};

export const GetProfileOKResponse = {
  required: false,
  serializedName: 'GetProfileOKResponse',
  type: {
    name: 'Composite',
    className: 'GetProfileOKResponse',
    modelProperties: {
      preferredLanguages: {
        required: false,
        serializedName: 'preferred_languages',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'stringElementType',
              type: {
                name: 'String'
              }
          }
        }
      },
      email: {
        required: false,
        serializedName: 'email',
        type: {
          name: 'String'
        }
      },
      isInboxEnabled: {
        required: false,
        serializedName: 'is_inbox_enabled',
        type: {
          name: 'Boolean'
        }
      },
      version: {
        required: false,
        serializedName: 'version',
        type: {
          name: 'Number'
        }
      }
    }
  }
};

export const UpsertProfileOKResponse = {
  required: false,
  serializedName: 'UpsertProfileOKResponse',
  type: {
    name: 'Composite',
    className: 'UpsertProfileOKResponse',
    modelProperties: {
      preferredLanguages: {
        required: false,
        serializedName: 'preferred_languages',
        type: {
          name: 'Sequence',
          element: {
              required: false,
              serializedName: 'stringElementType',
              type: {
                name: 'String'
              }
          }
        }
      },
      email: {
        required: false,
        serializedName: 'email',
        type: {
          name: 'String'
        }
      },
      isInboxEnabled: {
        required: false,
        serializedName: 'is_inbox_enabled',
        type: {
          name: 'Boolean'
        }
      },
      version: {
        required: false,
        serializedName: 'version',
        type: {
          name: 'Number'
        }
      }
    }
  }
};

export const DigitalCitizenshipAPIOptions = {
  required: false,
  type: {
    name: 'Composite',
    className: 'DigitalCitizenshipAPIOptions',
    modelProperties: {
      cursor: {
        required: false,
        serializedName: 'cursor',
        type: {
          name: 'String'
        }
      }
    }
  }
};

export const DigitalCitizenshipAPISubmitMessageforUserOptionalParams = {
  required: false,
  serializedName: 'SubmitMessageforUserOptions',
  type: {
    name: 'Composite',
    className: 'DigitalCitizenshipAPISubmitMessageforUserOptionalParams',
    modelProperties: {
      message: {
        required: false,
        serializedName: 'message',
        type: {
          name: 'Composite',
          className: 'NewMessage'
        }
      }
    }
  }
};

export const DigitalCitizenshipAPIUpsertProfileOptionalParams = {
  required: false,
  serializedName: 'UpsertProfileOptions',
  type: {
    name: 'Composite',
    className: 'DigitalCitizenshipAPIUpsertProfileOptionalParams',
    modelProperties: {
      body: {
        required: false,
        serializedName: 'body',
        type: {
          name: 'Composite',
          className: 'ExtendedProfile'
        }
      }
    }
  }
};
