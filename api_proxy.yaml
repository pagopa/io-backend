swagger: "2.0"
info:
  version: 1.0.0
  title: Proxy API
  description: Mobile and web proxy API gateway.
host: localhost
basePath: /api/v1
schemes:
  - https
security:
  - Bearer: []
paths:
  "/services/{service_id}":
    x-swagger-router-controller: ServicesController
    parameters:
      - name: service_id
        in: path
        type: string
        required: true
        description: The ID of an existing Service.
    get:
      operationId: getService
      summary: Get Service
      description: A previously created service with the provided service ID is returned.
      responses:
        '200':
          description: Service found.
          schema:
            "$ref": "#/definitions/ServicePublic"
          examples:
            application/json:
              department_name: dept
              organization_name: org
              service_id: 2b3e728c1a5d1efa035c
              service_name: service
              version: 1
        "401":
          description: Bearer token null or expired.
        "404":
          description: No service found for the provided ID.
          schema:
            $ref: "#/definitions/ProblemJson"
      parameters: []
  "/messages":
    x-swagger-router-controller: MessagesController
    parameters:
      - $ref: "#/parameters/PaginationRequest"
    get:
      operationId: getUserMessages
      summary: Get user's messages
      description: |-
        Returns the messages for the user identified by the provided fiscal code.
        Messages will be returned in inverse acceptance order (from last to first).
        The "next" field, when present, contains an URL pointing to the next page of results.
      responses:
        "200":
          description: Found.
          schema:
            $ref: "#/definitions/Messages"
          examples:
            application/json:
              items:
                - id: 01BX9NSMKVXXS5PSP2FATZMYYY
                  sender_service_id: "5a25abf4fcc89605c082f042c49a"
                - id: 01BX9NSMKVXXS5PSP2FATZM123
                  sender_service_id: "5a25abf4fcc89605c082f042c49a"
              page_size: 2
              next: https://example.com/next
        "401":
          description: Bearer token null or expired.
        "404":
          description: No message found.
          schema:
            $ref: "#/definitions/ProblemJson"
        "500":
          description: There was an error in retrieving the messages.
          schema:
            $ref: "#/definitions/ProblemJson"
  "/messages/{id}":
    x-swagger-router-controller: MessagesController
    parameters:
      - name: id
        in: path
        type: string
        required: true
        description: The ID of the message.
    get:
      operationId: getUserMessage
      summary: Get message
      description: |-
        Returns the message with the provided message ID.
      responses:
        "200":
          description: Found.
          schema:
            $ref: "#/definitions/MessageWithContent"
          examples:
            application/json:
              id: 01BX9NSMKAAAS5PSP2FATZM6BQ
              subject: message subject, aliquip sint nulla in estinut
              markdown: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas et mollis felis.
                Vivamus orci nisl, commodo ut sodales ut, eleifend a libero. Donec dapibus, turpis in mattis tempor,
                risus nunc malesuada ex, non aliquet metus nunc a lacus. Aenean in arcu vitae nisl porta
                fermentum nec non nibh. Phasellus tortor tellus, semper in metus eget, eleifend
                laoreet nibh. Aenean feugiat lectus ut nisl eleifend gravida.
              sender_service_id: "5a25abf4fcc89605c082f042c49a"
              created_at: "2018-05-21T12:45:41.105Z"
        "401":
          description: Bearer token null or expired.
        "404":
          description: No message found for the provided ID.
          schema:
            $ref: "#/definitions/ProblemJson"
        "500":
          description: There was an error in retrieving the message.
          schema:
            $ref: "#/definitions/ProblemJson"
  "/profile":
    x-swagger-router-controller: ProfileController
    get:
      operationId: getUserProfile
      summary: Get user's profile
      description: Returns the profile for the user identified by the provided fiscal code.
      responses:
        "200":
          description: Found.
          schema:
            allOf:
              - $ref: "#/definitions/ProfileWithEmail"
              - $ref: "#/definitions/ProfileWithoutEmail"
          examples:
            application/json:
              family_name: "Rossi"
              fiscal_code: "TMMEXQ60A10Y526X"
              has_profile: true
              is_email_set: false
              is_inbox_enabled: true
              is_webhook_enabled: false
              name: "Mario"
              preferred_email: "preferred@example.com"
              version: 1
              email: "email@example.com"
        "401":
          description: Bearer token null or expired.
        "500":
          description: There was an error in retrieving the user profile.
          schema:
            $ref: "#/definitions/ProblemJson"
    post:
      operationId: upsertProfile
      summary: Set User's profile
      description: Create or update the profile for the user identified by the provided fiscal code.
      parameters:
        - in: body
          name: body
          schema:
            $ref: "#/definitions/ExtendedProfile"
          x-examples:
            application/json:
              email: foobar@example.com
              preferred_languages: [ it_IT ]
              is_inbox_enabled: true
              is_webhook_enabled: false
              version: 1
      responses:
        '200':
          description: Profile updated.
          schema:
            allOf:
              - $ref: "#/definitions/LimitedProfile"
              - $ref: "#/definitions/ExtendedProfile"
          examples:
            application/json:
              email: foobar@example.com
              preferred_languages: [ it_IT ]
              is_inbox_enabled: true
              is_webhook_enabled: false
              version: 1
        '400':
          description: Invalid payload.
          schema:
            $ref: "#/definitions/ProblemJson"
        "401":
          description: Bearer token null or expired.
        '500':
          description: Profile cannot be updated.
          schema:
            $ref: "#/definitions/ProblemJson"
  "/installations/{installationID}":
    x-swagger-router-controller: NotificationController
    parameters:
      - name: installationID
        in: path
        required: true
        description: The ID of the message.
        type: string
    put:
      operationId: createOrUpdateInstallation
      summary: Create or update an Installation
      description: Create or update an Installation to the Azure Notification hub.
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/Installation"
          x-examples:
            application/json:
              platform: "gcm"
              pushChannel: "fLKP3EATnBI:APA91bEy4go681jeSEpLkNqhtIrdPnEKu6Dfi-STtUiEnQn8RwMfBiPGYaqdWrmzJyXIh5Yms4017MYRS9O1LGPZwA4sOLCNIoKl4Fwg7cSeOkliAAtlQ0rVg71Kr5QmQiLlDJyxcq3p"
      responses:
        "200":
          description: Success.
          schema:
            type: string
          examples:
            application/json:
              "ok"
        "401":
          description: Bearer token null or expired.
        "500":
          description: There was an error in registering the device to the Notification Hub.
          schema:
            $ref: "#/definitions/ProblemJson"
  "/session":
    x-swagger-router-controller: AuthenticationController
    get:
      operationId: getSessionState
      summary: Get the user current session
      description: Return the session state for the current authenticated user.
      responses:
        "200":
          description: Found.
          schema:
            $ref: "#/definitions/PublicSession"
          examples:
            application/json:
              spidLevel: "https://www.spid.gov.it/SpidL2"
              walletToken: "c77de47586c841adbd1a1caeb90dce25dcecebed620488a4f932a6280b10ee99a77b6c494a8a6e6884ccbeb6d3fe736b"
        "401":
          description: Bearer token null or expired.
        "500":
          description: There was an error in retrieving the user session data.
          schema:
            $ref: "#/definitions/ProblemJson"
definitions:
  BlockedInboxOrChannels:
    $ref: "https://raw.githubusercontent.com/teamdigitale/digital-citizenship-functions/v0.44.0/api/definitions.yaml#/BlockedInboxOrChannels"
  DepartmentName:
    $ref: "https://raw.githubusercontent.com/teamdigitale/digital-citizenship-functions/v0.44.0/api/definitions.yaml#/DepartmentName"
  EmailAddress:
    $ref: "https://raw.githubusercontent.com/teamdigitale/digital-citizenship-functions/v0.44.0/api/definitions.yaml#/EmailAddress"
  ExtendedProfile:
    $ref: "https://raw.githubusercontent.com/teamdigitale/digital-citizenship-functions/v0.44.0/api/definitions.yaml#/ExtendedProfile"
  FiscalCode:
    $ref: "https://raw.githubusercontent.com/teamdigitale/digital-citizenship-functions/v0.44.0/api/definitions.yaml#/FiscalCode"
  IsInboxEnabled:
    $ref: "https://raw.githubusercontent.com/teamdigitale/digital-citizenship-functions/v0.44.0/api/definitions.yaml#/IsInboxEnabled"
  IsWebhookEnabled:
    $ref: "https://raw.githubusercontent.com/teamdigitale/digital-citizenship-functions/v0.44.0/api/definitions.yaml#/IsWebhookEnabled"
  LimitedProfile:
    $ref: "https://raw.githubusercontent.com/teamdigitale/digital-citizenship-functions/v0.44.0/api/definitions.yaml#/LimitedProfile"
  MessageBodyMarkdown:
    $ref: "https://raw.githubusercontent.com/teamdigitale/digital-citizenship-functions/v0.44.0/api/definitions.yaml#/MessageBodyMarkdown"
  MessageContent:
    $ref: "https://raw.githubusercontent.com/teamdigitale/digital-citizenship-functions/v0.44.0/api/definitions.yaml#/MessageContent"
  MessageResponseNotificationStatus:
    $ref: "https://raw.githubusercontent.com/teamdigitale/digital-citizenship-functions/v0.44.0/api/definitions.yaml#/MessageResponseNotificationStatus"
  MessageSubject:
    $ref: "https://raw.githubusercontent.com/teamdigitale/digital-citizenship-functions/v0.44.0/api/definitions.yaml#/MessageSubject"
  OrganizationName:
    $ref: "https://raw.githubusercontent.com/teamdigitale/digital-citizenship-functions/v0.44.0/api/definitions.yaml#/OrganizationName"
  PaginationResponse:
    $ref: "https://raw.githubusercontent.com/teamdigitale/digital-citizenship-functions/v0.44.0/api/definitions.yaml#/PaginationResponse"
  PreferredLanguage:
    $ref: "https://raw.githubusercontent.com/teamdigitale/digital-citizenship-functions/v0.44.0/api/definitions.yaml#/PreferredLanguage"
  PreferredLanguages:
    $ref: "https://raw.githubusercontent.com/teamdigitale/digital-citizenship-functions/v0.44.0/api/definitions.yaml#/PreferredLanguages"
  ProblemJson:
    $ref: "https://raw.githubusercontent.com/teamdigitale/digital-citizenship-functions/v0.44.0/api/definitions.yaml#/ProblemJson"
  ServiceId:
    $ref: "https://raw.githubusercontent.com/teamdigitale/digital-citizenship-functions/v0.44.0/api/definitions.yaml#/ServiceId"
  ServicePublic:
    $ref: "https://raw.githubusercontent.com/teamdigitale/digital-citizenship-functions/v0.44.0/api/definitions.yaml#/ServicePublic"
  ServiceName:
    $ref: "https://raw.githubusercontent.com/teamdigitale/digital-citizenship-functions/v0.44.0/api/definitions.yaml#/ServiceName"
  Timestamp:
    $ref: "https://raw.githubusercontent.com/teamdigitale/digital-citizenship-functions/v0.44.0/api/definitions.yaml#/Timestamp"
  PaymentNoticeNumber:
    $ref: "https://raw.githubusercontent.com/teamdigitale/digital-citizenship-functions/v0.44.0/api/definitions.yaml#/PaymentNoticeNumber"
  PaymentAmount:
    $ref: "https://raw.githubusercontent.com/teamdigitale/digital-citizenship-functions/v0.44.0/api/definitions.yaml#/PaymentAmount"
  PaymentData:
    $ref: "https://raw.githubusercontent.com/teamdigitale/digital-citizenship-functions/v0.44.0/api/definitions.yaml#/PaymentData"
  MessageWithContent:
    type: object
    title: Message with content
    properties:
      created_at:
        $ref: "#/definitions/Timestamp"
      id:
        type: string
      markdown:
        $ref: "#/definitions/MessageBodyMarkdown"
      payment_data:
        $ref: "#/definitions/PaymentData"
      sender_service_id:
        type: string
      subject:
        $ref: "#/definitions/MessageSubject"
    required:
      - created_at
      - id
      - sender_service_id
  MessageWithoutContent:
    type: object
    title: Message without content
    properties:
      id:
        type: string
      sender_service_id:
        type: string
    required:
      - id
      - sender_service_id
  Messages:
    type: object
    title: A list of messages
    properties:
      items:
        type: array
        items:
          $ref: "#/definitions/MessageWithoutContent"
      next:
        type: string
      page_size:
        $ref: '#/definitions/PageSize'
    required:
      - items
      - page_size
  Installation:
    type: object
    title: Installation
    description: Describes an app installation.
    properties:
      platform:
        $ref: '#/definitions/Platform'
      pushChannel:
        $ref: '#/definitions/PushChannel'
    required:
      - platform
      - pushChannel
  ProfileWithEmail:
    type: object
    title: Profile with wmail
    description: Describes the user's profile.
    properties:
      email:
        $ref: '#/definitions/EmailAddress'
      family_name:
        type: string
      fiscal_code:
        $ref: '#/definitions/FiscalCode'
      has_profile:
        $ref: "#/definitions/HasProfile"
      is_email_set:
        $ref: "#/definitions/IsEmailSet"
      is_inbox_enabled:
        $ref: "#/definitions/IsInboxEnabled"
      is_webhook_enabled:
        $ref: "#/definitions/IsWebhookEnabled"
      name:
        type: string
      spid_email:
        $ref: '#/definitions/EmailAddress'
      preferred_languages:
        type: array
        items:
          $ref: '#/definitions/PreferredLanguage'
      version:
        $ref: '#/definitions/Version'
    required:
      - family_name
      - fiscal_code
      - has_profile
      - is_email_set
      - is_inbox_enabled
      - is_webhook_enabled
      - name
      - spid_email
      - version
  ProfileWithoutEmail:
    type: object
    title: Profile without email
    description: Describes the user's profile.
    properties:
      family_name:
        type: string
      fiscal_code:
        $ref: '#/definitions/FiscalCode'
      has_profile:
        $ref: "#/definitions/HasProfile"
      is_email_set:
        $ref: "#/definitions/IsEmailSet"
      is_inbox_enabled:
        $ref: "#/definitions/IsInboxEnabled"
      is_webhook_enabled:
        $ref: "#/definitions/IsWebhookEnabled"
      name:
        type: string
      spid_email:
        $ref: '#/definitions/EmailAddress'
      preferred_languages:
        type: array
        items:
          $ref: '#/definitions/PreferredLanguage'
      version:
        $ref: '#/definitions/Version'
    required:
      - family_name
      - fiscal_code
      - has_profile
      - is_email_set
      - is_inbox_enabled
      - is_webhook_enabled
      - name
      - spid_email
      - version
  PublicSession:
    type: object
    title: User session data
    description: Describe the current session of an authenticated user.
    properties:
      spidLevel:
         $ref: '#/definitions/SpidLevel'
      walletToken:
        type: string
    required:
      - spidLevel
      - walletToken
  InstallationID:
    type: string
    description: |-
      The sixteen octets of an Installation ID are represented as 32 hexadecimal (base 16) digits, displayed in five groups
      separated by hyphens, in the form 8-4-4-4-12 for a total of 36 characters (32 alphanumeric characters and four
      hyphens).
      See https://en.wikipedia.org/wiki/Universally_unique_identifier
    pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
  HasProfile:
    type: boolean
    default: false
    description: True if the user has a remote profile.
  IsEmailSet:
    type: boolean
    default: false
    description:  True if the user has presonalized the email.
  Version:
    type: integer
    minimum: 0
    description: The entity version.
  PageSize:
    type: integer
    minimum: 0
    description: Number of items returned for each page.
  Platform:
    type: string
    description: The platform type where the installation happened.
    x-extensible-enum:
      - apns
      - gcm
  PushChannel:
    type: string
    description: |-
      The Push Notification Service handle for this Installation.
      See https://docs.microsoft.com/en-us/azure/notification-hubs/notification-hubs-push-notification-registration-management
  SpidLevel:
    type: string
    description: A SPID level.
    x-extensible-enum:
      - https://www.spid.gov.it/SpidL1
      - https://www.spid.gov.it/SpidL2
      - https://www.spid.gov.it/SpidL3
responses: {}
parameters:
  PaginationRequest:
    type: string
    name: cursor
    in: query
    minimum: 1
    description: An opaque identifier that points to the next item in the collection.
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
