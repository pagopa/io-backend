swagger: "2.0"
info:
  version: 1.0.0
  title: Carta Giovani Nazionale API
host: localhost
basePath: /api/v1/cgn
schemes:
  - https
security:
  - Bearer: []
paths:
  "/status":
    get:
      operationId: getCgnStatus
      summary: Get the CGN status details
      description: |
        Get the CGN status details 
        by the provided fiscal code
      responses:
        "200":
          description: CGN status details.
          schema:
            $ref: "#/definitions/Card"
        "401":
          description: Bearer token null or expired.
        "403":
          description: Forbidden.
        "404":
          description: No CGN found.
        "500":
          description: Service unavailable.
          schema:
            $ref: "#/definitions/ProblemJson"

  "/activation":
    post:
      operationId: startCgnActivation
      summary: Start a CGN activation procedure
      description: | 
        Start a new CGN activation procedure
        for the logged user calculating if the user is
        eligible to get a CGN.
      responses:
        "201":
          description: Request created.
          schema:
            $ref: "#/definitions/InstanceId"
          headers:
            Location:
              type: string
              description: |-
                Location (URL) of created request resource.
                A GET request to this URL returns the request status and details.
        "202":
          description: Processing request.
          schema:
            $ref: "#/definitions/InstanceId"
        "401":
          description: Bearer token null or expired.
        "403":
          description: |
            Cannot activate a new CGN because the user is ineligible to get the CGN.
        "409":
          description: |
            Cannot activate the user's cgn because another updateCgn request was found
            for this user or it is already active.
        "500":
          description: Service unavailable.
          schema:
            $ref: "#/definitions/ProblemJson"
    get:
      operationId: getCgnActivation
      summary: |
        Get CGN activation process status
      description: |
        Get informations about a CGN activation process
      responses:
        "200":
            description: Cgn activation details.
            schema:
              $ref: "#/definitions/CgnActivationDetail"
        "401":
          description: Bearer token null or expired.
        "403":
          description: Forbidden.
        "404":
          description: No CGN activation process found.
        "500":
          description: Service unavailable.
          schema:
            $ref: "#/definitions/ProblemJson"
  "/eyca/activation":
    post:
      operationId: startEycaActivation
      summary: Start an EYCA activation procedure
      description: | 
        Start a new EYCA activation procedure
        for the logged user calculating if the user is
        eligible to enable EYCA on his CGN card.
      responses:
        "201":
          description: Request created.
          schema:
            $ref: "#/definitions/InstanceId"
          headers:
            Location:
              type: string
              description: |-
                Location (URL) of created request resource.
                A GET request to this URL returns the request status and details.
        "202":
          description: Processing request.
          schema:
            $ref: "#/definitions/InstanceId"
        "401":
          description: Bearer token null or expired.
        "403":
          description: |
            Cannot activate EYCA Card because the user is ineligible to enable EYCA.
        "409":
          description: |
            Cannot activate EYCA Card because another EYCA Card activation request was found
            for this user or it is already active.
        "500":
          description: Service unavailable.
          schema:
            $ref: "#/definitions/ProblemJson"
    get:
      operationId: getEycaActivation
      summary: |
        Get EYCA activation process' status
      description: |
        Get informations about an EYCA activation process
      responses:
        "200":
            description: Eyca Card activation details.
            schema:
              $ref: "#/definitions/EycaActivationDetail"
        "401":
          description: Wrong or missing function key.
        "403":
          description: Forbidden.
        "404":
          description: No EYCA Card activation process found.
        "500":
          description: Service unavailable.
          schema:
            $ref: "#/definitions/ProblemJson"

  "/eyca/status":
    get:
      operationId: getEycaStatus
      summary: Get the Eyca Card status details
      description: |
        Get the Eyca Card status details
      responses:
        "200":
          description: Eyca Card status details.
          schema:
            $ref: "#/definitions/EycaCard"
        "401":
          description: Bearer token null or expired.
        "403":
          description: Forbidden.
        "404":
          description: No Eyca Card found.
        "409":
          description: Conflict.
        "500":
          description: Service unavailable.
          schema:
            $ref: "#/definitions/ProblemJson"
  
  "/delete":
    post:
      operationId: startCgnUnsubscription
      summary: Start a CGN unsubscription procedure
      description: | 
        Start a new CGN unsubscription procedure
        for the logged user
      responses:
        "201":
          description: Request created.
          schema:
            $ref: "#/definitions/InstanceId"
          headers:
            Location:
              type: string
              description: |
                Location (URL) of created request resource
                This location actually points to a not existing api, but semantically 201
                means that the request has been taken in charge
        "202":
          description: Processing request.
          schema:
            $ref: "#/definitions/InstanceId"
        "401":
          description: Bearer token null or expired.
        "403":
          description: |
            Cannot unsubscribe because the user is ineligible to get the CGN
        "409":
          description: |
            Cannot unsubscribe the user's cgn because another updateCgn request was found
            for this user
        "500":
          description: Service unavailable.
          schema:
            $ref: "#/definitions/ProblemJson"

  "/otp":
    post:
      operationId: generateOtp
      summary: |
        Generate a new Otp related to a CGN
      description: |
        Generate a new Otp used to discount an online purchase
        through a valid CGN
      responses:
        "200":
            description: Otp generated.
            schema:
              $ref: "#/definitions/Otp"
        "401":
          description: Bearer token null or expired.
        "403":
          description: Forbidden.
        "500":
          description: Service unavailable.
          schema:
            $ref: "#/definitions/ProblemJson"
definitions:
  Timestamp:
    $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/v25.5.0/openapi/definitions.yaml#/Timestamp"
  FiscalCode:
    $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/v25.5.0/openapi/definitions.yaml#/FiscalCode"
  ProblemJson:
    $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/v25.5.0/openapi/definitions.yaml#/ProblemJson"
  InstanceId:
    $ref: "https://raw.githubusercontent.com/pagopa/io-functions-cgn/v2.6.1/openapi/index.yaml#/definitions/InstanceId"
  CommonCard:
    type: object
    properties:
      activation_date:
        $ref: "#/definitions/Timestamp"
      expiration_date:
        $ref: "#/definitions/Timestamp"
    required:
      - activation_date
      - expiration_date
    
  CardPending:
    type: object
    properties:
      status:
        type: string
        enum:
          - PENDING
    required:
      - status
  CardActivated:
    allOf:
      - $ref: "#/definitions/CommonCard"
      - type: object
        properties:
          status:
            type: string
            enum:
              - ACTIVATED
        required:
          - status
  CardRevoked:
    allOf:
      - $ref: "#/definitions/CommonCard"
      - type: object
        properties:
          status:
            type: string
            enum:
              - REVOKED
          revocation_date:
            $ref: "#/definitions/Timestamp"
          revocation_reason:
            type: string
            minLength: 1
        required:
          - status
          - revocation_date
          - revocation_reason
  CardExpired:
    allOf:
      - $ref: "#/definitions/CommonCard"
      - type: object
        properties:
          status:
            type: string
            enum:
              - EXPIRED
        required:
          - status
  CardPendingDelete:
    allOf:
      - $ref: "#/definitions/CommonCard"
      - type: object
        properties:
          status:
            type: string
            enum:
              - PENDING_DELETE
        required:
          - status
  Card:
    x-one-of: true
    allOf:
      - $ref: "#/definitions/CardPending"
      - $ref: "#/definitions/CardPendingDelete"
      - $ref: "#/definitions/CardActivated"
      - $ref: "#/definitions/CardRevoked"
      - $ref: "#/definitions/CardExpired"
    x-example: 
      status: ACTIVATED
      activation_date: "2021-10-13T00:00:00.000Z"
      expiration_date: "2030-10-13T00:00:00.000Z"

  CcdbNumber:
    type: string
    description: The internal CCDB Card number
    pattern: "^[A-Z][0-9]{3}-[A-Z][0-9]{3}-[A-Z][0-9]{3}-[A-Z][0-9]{3}$"
    minLength: 1

  EycaCardActivated:
    allOf:
      - $ref: "#/definitions/CardActivated"
      - type: object
        properties:
          card_number:
            $ref: "#/definitions/CcdbNumber"
        required:
          - card_number
  EycaCardExpired:
    allOf:
      - $ref: "#/definitions/CardExpired"
      - type: object
        properties:
          card_number:
            $ref: "#/definitions/CcdbNumber"
        required:
          - card_number
  EycaCardRevoked:
    allOf:
      - $ref: "#/definitions/CardRevoked"
      - type: object
        properties:
          card_number:
            $ref: "#/definitions/CcdbNumber"
        required:
          - card_number
  EycaCardPendingDelete:
    allOf:
      - $ref: "#/definitions/CardPendingDelete"
      - type: object
        properties:
          card_number:
            $ref: "#/definitions/CcdbNumber"
        required:
          - card_number
  EycaCard:
    x-one-of: true
    allOf:
      - $ref: "#/definitions/CardPending"
      - $ref: "#/definitions/EycaCardPendingDelete"
      - $ref: "#/definitions/EycaCardActivated"
      - $ref: "#/definitions/EycaCardRevoked"
      - $ref: "#/definitions/EycaCardExpired"
    x-example: 
      status: ACTIVATED
      activation_date: "2021-10-13T00:00:00.000Z"
      expiration_date: "2030-10-13T00:00:00.000Z"

  CgnActivationDetail:
    type: object
    properties:
      instance_id:
        $ref: "#/definitions/InstanceId"
      status:
        type: string
        x-extensible-enum:
          - PENDING
          - RUNNING
          - COMPLETED
          - ERROR
          - UNKNOWN
      created_at:
        $ref: "#/definitions/Timestamp"
      last_updated_at:
        $ref: "#/definitions/Timestamp"
    required:
      - instance_id
      - status

  EycaActivationDetail:
    type: object
    properties:
      status:
        type: string
        x-extensible-enum:
          - PENDING
          - RUNNING
          - COMPLETED
          - ERROR
          - UNKNOWN
      created_at:
        $ref: "#/definitions/Timestamp"
      last_updated_at:
        $ref: "#/definitions/Timestamp"
    required:
      - status

  OtpCode:
    description: The unique otp code that can be use for discounts
    type: string
    pattern: "^[A-Z0-9]{9,13}$"
  Otp:
    type: object
    properties:
      code:
        $ref: "#/definitions/OtpCode"
      expires_at:
        $ref: "#/definitions/Timestamp"
      ttl:
        type: number
    required:
      - code
      - expires_at
      - ttl

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
