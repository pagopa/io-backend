
swagger: "2.0"
info:
  title: Geocoding and Search API v7
  version: '7.65'
  description: This document describes the Geocoding and Search API.

host: geocode.search.hereapi.com
basePath: "/v1"
parameters:
  apiKey:
    description: |
      API key used to authorize requests.
        For more information, see https://developer.here.com/documentation/authentication/dev_guide/topics/api-key-credentials.html.
    name: apiKey
    type: string
    required: true
    in: query
    minLength: 1
  
  inAutocompleteGeocode:
    name: in
    description: |+
      Search within a geographic area. This is a hard filter. Results will be returned if they are located within the specified area.

      A geographic area can be

        * a country (or multiple countries), provided as comma-separated [ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) country codes

          The country codes are to be provided in all uppercase.

          Format: `countryCode:{countryCode}[,{countryCode}]*`

          Examples:
          * `countryCode:USA`
          * `countryCode:CAN,MEX,USA`

    in: query
    required: false
    type: string
    minLength: 1
      
  qGeocode:
    name: q
    description: |
      Enter a free-text query

      Examples:
        * `125, Berliner, berlin`
        * `Beacon, Boston, Hospital`
        * `Schnurrbart German Pub and Restaurant, Hong Kong`

      _Note: Either `q` or `qq`-parameter is required on this endpoint. Both parameters can be provided in the same request._
    in: query
    required: true
    type: string
    minLength: 1

  qq:
    name: qq
    description: |
      Enter a qualified query. A qualified query is similar to a free-text query, but in a structured manner.
        It can take multiple _sub-parameters_, separated by semicolon, allowing to specify different aspects of a query.

      Currently supported _sub-parameters_ are `country`, `state`, `county`, `city`, `district`, `street`,
        `houseNumber`, and `postalCode`.

      Format: `{sub-parameter}={string}[;{sub-parameter}={string}]*`

      Examples:
        * `city=Berlin;country=Germany;street=Friedrichstr;houseNumber=20`
        * `city=Berlin;country=Germany`
        * `postalCode=10969`

      _Note: Either `q` or `qq`-parameter is required on this endpoint. Both parameters can be provided in the same request._
    in: query
    type: string
    minLength: 1
    
definitions:
    OpenSearchGeocodeResponse:
      type: object
      required:
      - items
      properties:
        items:
          type: array
          items:
            $ref: "#/definitions/GeocodeResultItem"
          description: The results are presented as a JSON list of candidates in ranked
            order (most-likely to least-likely) based on the matched location criteria.
    GeocodeResultItem:
      type: object
      required:
      - title
      - address
      properties:
        title:
          type: string
          description: The localized display name of this result item.
        id:
          type: string
          description: The unique identifier for the result item. This ID can be used
            for a Look Up by ID search as well.
        resultType:
          type: string
          enum:
          - administrativeArea
          - locality
          - street
          - intersection
          - addressBlock
          - houseNumber
          - postalCodePoint
          - place
          description: 'WARNING: The resultType values ''intersection'' and ''postalCodePoint''
            are in BETA state'
        houseNumberType:
          type: string
          enum:
          - PA
          - interpolated
        addressBlockType:
          type: string
          enum:
          - block
          - subblock
        localityType:
          type: string
          enum:
          - postalCode
          - subdistrict
          - district
          - city
        administrativeAreaType:
          type: string
          enum:
          - county
          - state
          - country
        address:
          $ref: "#/definitions/Address"
          description: Postal address of the result item.
        position:
          $ref: "#/definitions/DisplayResponseCoordinate"
          description: The coordinates (latitude, longitude) of a pin on a map corresponding
            to the searched place.
        access:
          type: array
          items:
            $ref: "#/definitions/AccessResponseCoordinate"
          description: Coordinates of the place you are navigating to (for example,
            driving or walking). This is a point on a road or in a parking lot.
        distance:
          type: integer
          format: int64
          description: 'The distance from the search center to this result item in
            meters. For example: "172039"'
        mapView:
          $ref: "#/definitions/MapView"
          description: The bounding box enclosing the geometric shape (area or line)
            that an individual result covers. `place` typed results have no `mapView`.
        categories:
          type: array
          items:
            $ref: "#/definitions/Category"
          description: The list of categories assigned to this place.
        foodTypes:
          type: array
          items:
            $ref: "#/definitions/Category"
          description: The list of food types assigned to this place.
        houseNumberFallback:
          type: boolean
          description: If true, indicates that the requested house number was corrected
            to match the nearest known house number. This field is visible only when
            the value is true.
        timeZone:
          $ref: "#/definitions/TimeZoneInfo"
          description: BETA - Provides time zone information for this place. (rendered
            only if 'show=tz' is provided.)
        scoring:
          $ref: "#/definitions/Scoring"
          description: Indicates for each result how good the result matches to the
            original query. This can be used by the customer application to accept
            or reject the results depending on how "expensive" is the mistake for
            their use case
        parsing:
          $ref: "#/definitions/Parsing"
          description: BETA - Parsed terms and their positions in the input query
            (only rendered if 'show=parsing' is provided.)
    Address:
      type: object
      properties:
        label:
          type: string
          description: 'Assembled address value built out of the address components
            according to the regional postal rules. These are the same rules for all
            endpoints. It may not include all the input terms. For example: "Schulstraße
            4, 32547 Bad Oeynhausen, Germany"'
        countryCode:
          type: string
          description: 'A three-letter country code. For example: "DEU"'
        countryName:
          type: string
          description: 'The localised country name. For example: "Deutschland"'
        stateCode:
          type: string
          description: 'A state code or state name abbreviation – country specific.
            For example, in the United States it is the two letter state abbreviation:
            "CA" for California.'
        state:
          type: string
          description: 'The state division of a country. For example: "North Rhine-Westphalia"'
        countyCode:
          type: string
          description: 'A county code or county name abbreviation – country specific.
            For example, for Italy it is the province abbreviation: "RM" for Rome.'
        county:
          type: string
          description: A division of a state; typically, a secondary-level administrative
            division of a country or equivalent.
        city:
          type: string
          description: 'The name of the primary locality of the place. For example:
            "Bad Oyenhausen"'
        district:
          type: string
          description: 'A division of city; typically an administrative unit within
            a larger city or a customary name of a city''s neighborhood. For example:
            "Bad Oyenhausen"'
        subdistrict:
          type: string
          description: 'A subdivision of a district. For example: "Minden-Lübbecke"'
        street:
          type: string
          description: 'Name of street. For example: "Schulstrasse"'
        block:
          type: string
          description: Name of block.
        subblock:
          type: string
          description: Name of sub-block.
        postalCode:
          type: string
          description: 'An alphanumeric string included in a postal address to facilitate
            mail sorting, such as post code, postcode, or ZIP code. For example: "32547"'
        houseNumber:
          type: string
          description: 'House number. For example: "4"'
    DisplayResponseCoordinate:
      type: object
      required:
      - lat
      - lng
      properties:
        lat:
          type: number
          format: double
          description: 'Latitude of the address. For example: "52.19404"'
        lng:
          type: number
          format: double
          description: 'Longitude of the address. For example: "8.80135"'
    AccessResponseCoordinate:
      type: object
      required:
      - lat
      - lng
      properties:
        lat:
          type: number
          format: double
          description: 'Latitude of the address. For example: "52.19404"'
        lng:
          type: number
          format: double
          description: 'Longitude of the address. For example: "8.80135"'
    MapView:
      type: object
      required:
      - west
      - south
      - east
      - north
      properties:
        west:
          type: number
          format: double
          description: 'Longitude of the western-side of the box. For example: "8.80068"'
        south:
          type: number
          format: double
          description: 'Latitude of the southern-side of the box. For example: "52.19333"'
        east:
          type: number
          format: double
          description: 'Longitude of the eastern-side of the box. For example: "8.8167"'
        north:
          type: number
          format: double
          description: 'Latitude of the northern-side of the box. For example: "52.19555"'
    Category:
      type: object
      required:
      - id
      properties:
        id:
          type: string
          description: 'Identifier number for an associated category. For example:
            "900-9300-0000"'
        name:
          type: string
          description: Name of the place category in the result item language.
        primary:
          type: boolean
          description: Whether or not it is a primary category. This field is visible
            only when the value is 'true'.
    TimeZoneInfo:
      type: object
      required:
      - name
      - utcOffset
      properties:
        name:
          type: string
          description: 'The name of the time zone as defined in the [tz database](https://en.wikipedia.org/wiki/Tz_database).
            For example: "Europe/Berlin"'
        utcOffset:
          type: string
          description: The UTC offset for this time zone at request time. For example
            "+02:00"
    Scoring:
      type: object
      properties:
        queryScore:
          type: number
          format: double
          description: Indicates how good the input matches the returned address.
            It is equal to 1 if all input tokens are recognized and matched.
        fieldScore:
          $ref: "#/definitions/FieldScore"
          description: Indicates how good the individual result fields match to the
            corresponding part of the query. Is included only for the result fields
            that are actually matched to the query.
    FieldScore:
      type: object
      properties:
        country:
          type: number
          format: double
          description: Indicates how good the result country name or [ISO 3166-1 alpha-3]
            country code matches to the freeform or qualified input.
        countryCode:
          type: number
          format: double
          description: Indicates how good the result [ISO 3166-1 alpha-3] country
            code matches to the freeform or qualified input.
        state:
          type: number
          format: double
          description: Indicates how good the result state name matches to the freeform
            or qualified input.
        stateCode:
          type: number
          format: double
          description: Indicates how good the result state code matches to the freeform
            or qualified input.
        county:
          type: number
          format: double
          description: Indicates how good the result county name matches to the freeform
            or qualified input.
        countyCode:
          type: number
          format: double
          description: Indicates how good the result county code matches to the freeform
            or qualified input.
        city:
          type: number
          format: double
          description: Indicates how good the result city name matches to the freeform
            or qualified input.
        district:
          type: number
          format: double
          description: Indicates how good the result district name matches to the
            freeform or qualified input.
        subdistrict:
          type: number
          format: double
          description: Indicates how good the result sub-district name matches to
            the freeform or qualified input.
        streets:
          type: array
          items:
            type: number
            format: double
          description: Indicates how good the result street names match to the freeform
            or qualified input. If the input contains multiple street names, the field
            score is calculated and returned for each of them individually.
        block:
          type: number
          format: double
          description: Indicates how good the result block name matches to the freeform
            or qualified input.
        subblock:
          type: number
          format: double
          description: Indicates how good the result sub-block name matches to the
            freeform or qualified input.
        houseNumber:
          type: number
          format: double
          description: Indicates how good the result house number matches to the freeform
            or qualified input. It may happen, that the house number, which one is
            looking for, is not yet in the map data. For such cases, the /geocode
            returns the nearest known house number on the same street. This represents
            the numeric difference between the requested and the returned house numbers.
        postalCode:
          type: number
          format: double
          description: Indicates how good the result postal code matches to the freeform
            or qualified input.
        building:
          type: number
          format: double
          description: Indicates how good the result building name matches to the
            freeform or qualified input.
        unit:
          type: number
          format: double
          description: Indicates how good the result unit (such as a micro point address)
            matches to the freeform or qualified input.
        placeName:
          type: number
          format: double
          description: Indicates how good the result place name matches to the freeform
            or qualified input.
        ontologyName:
          type: number
          format: double
          description: Indicates how good the result ontology name matches to the
            freeform or qualified input.
    Parsing:
      type: object
      properties:
        placeName:
          type: array
          items:
            $ref: "#/definitions/MatchInfo"
          description: Place name matches
        country:
          type: array
          items:
            $ref: "#/definitions/MatchInfo"
          description: Country matches
        state:
          type: array
          items:
            $ref: "#/definitions/MatchInfo"
          description: State matches
        county:
          type: array
          items:
            $ref: "#/definitions/MatchInfo"
          description: County matches
        city:
          type: array
          items:
            $ref: "#/definitions/MatchInfo"
          description: City matches
        district:
          type: array
          items:
            $ref: "#/definitions/MatchInfo"
          description: District matches
        subdistrict:
          type: array
          items:
            $ref: "#/definitions/MatchInfo"
          description: Subdistrict matches
        street:
          type: array
          items:
            $ref: "#/definitions/MatchInfo"
          description: Street matches
        block:
          type: array
          items:
            $ref: "#/definitions/MatchInfo"
          description: Block matches
        subblock:
          type: array
          items:
            $ref: "#/definitions/MatchInfo"
          description: Subblock matches
        houseNumber:
          type: array
          items:
            $ref: "#/definitions/MatchInfo"
          description: HouseNumber matches
        postalCode:
          type: array
          items:
            $ref: "#/definitions/MatchInfo"
          description: PostalCode matches
        building:
          type: array
          items:
            $ref: "#/definitions/MatchInfo"
          description: Building matches
        secondaryUnits:
          type: array
          items:
            $ref: "#/definitions/MatchInfo"
          description: secondaryUnits matches
        ontologyName:
          type: array
          items:
            $ref: "#/definitions/MatchInfo"
          description: Ontology name matches
    MatchInfo:
      type: object
      required:
      - start
      - end
      - value
      properties:
        start:
          type: integer
          format: int32
          description: First index of the matched range (0-based indexing, inclusive)
        end:
          type: integer
          format: int32
          description: One past the last index of the matched range (0-based indexing,
            exclusive); The difference between end and start gives the length of the
            term
        value:
          type: string
          description: Matched term in the input string
        qq:
          type: string
          enum:
          - country
          - state
          - county
          - city
          - district
          - street
          - houseNumber
          - postalCode
          description: The matched qualified query field type. If this is not returned,
            then matched value refers to the freetext query
    ErrorResponse:
      type: object
      required:
      - status
      - title
      - correlationId
      - requestId
      properties:
        status:
          type: integer
          format: int32
          description: The HTTP status code
        title:
          type: string
          description: Human-readable error description
        code:
          type: string
          description: Error code
        cause:
          type: string
          description: Human-readable explanation for the error
        action:
          type: string
          description: Human-readable action for the user
        correlationId:
          type: string
          description: Auto-generated ID univocally identifying this request
        requestId:
          type: string
          description: Request identifier provided by the user
paths:
  "/geocode":
    get:
      operationId: geocode
      summary: Geocode
      description: This endpoint allows to find the geo-coordinates of a known address,
        place, locality or administrative area, even if the query is incomplete or
        partly incorrect. It also returns a complete postal address string and address
        details. It supports structured, unstructured and hybrid queries - combinations
        of structured and unstructured query elements.
      parameters:
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/inAutocompleteGeocode"
        - $ref: "#/parameters/qGeocode"
        - $ref: "#/parameters/qq"
      responses:
        '200':
          description: The search results.
          schema:
            $ref: "#/definitions/OpenSearchGeocodeResponse"
  
        '400':
          description: 'Client error: request failed validation.'
          schema:
            $ref: "#/definitions/ErrorResponse"
        '405':
          description: 'Client error: http method not supported.'
          schema:
            $ref: "#/definitions/ErrorResponse"
        '503':
          description: Temporary server error.
          schema:
            $ref: "#/definitions/ErrorResponse"

