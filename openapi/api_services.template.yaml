openapi: 3.0.2
servers:
  - url: https://api-app.io.pagopa.it/api
info:
  title: Services App Backend API
  version: 16.7.0
tags:
  - name: search
    description: Search APIs
  - name: details
    description: Retrieve resources details
  - name: featured
    description: Retrieve featured Lists
security:
  - Bearer: []
paths:
  /v2/institutions:
    get:
      tags:
        - search
      summary: Find institutions
      description: Multiple status values can be provided with comma separated strings
      operationId: findInstitutions
      parameters:
        - name: search
          in: query
          description: A full-text search query expression
          required: false
          schema:
            type: string
        - name: scope
          in: query
          description: Institution scope
          required: false
          schema:
            $ref: "#/components/schemas/ScopeType"
        - name: limit
          in: query
          description: The number of search results to retrieve. This can be used in conjunction with skip to implement client-side paging of search results (https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part2-url-conventions.html#sec_SystemQueryOptionstopandskip).
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: offset
          in: query
          description: The number of search results to skip (https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part2-url-conventions.html#sec_SystemQueryOptionstopandskip). This value cannot be greater than 100,000.
          required: false
          schema:
            type: integer
            minimum: 0
            maximum: 100
            default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstitutionsResource"
        "400":
          description: Bad Request
        "401":
          description: Bearer token null or expired
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
        "502":
          description: Bad gateway
        "504":
          description: Gateway timeout
  /v2/institutions/featured:
    get:
      tags:
        - featured
      summary: Retrieve featured intitutions
      operationId: getFeaturedInstitutions
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Institutions"
        "401":
          description: Bearer token null or expired
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
        "502":
          description: Bad gateway
        "504":
          description: Gateway timeout
  /v2/institutions/{institutionId}/services:
    get:
      tags:
        - search
      summary: Find services for institution
      description: Given an Institution allow to find its services
      operationId: findInstutionServices
      parameters:
        - name: institutionId
          in: path
          description: ID of the institution to search for services
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: The number of search results to retrieve. This can be used in conjunction with skip to implement client-side paging of search results (https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part2-url-conventions.html#sec_SystemQueryOptionstopandskip).
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: offset
          in: query
          description: The number of search results to skip (https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part2-url-conventions.html#sec_SystemQueryOptionstopandskip). This value cannot be greater than 100,000.
          required: false
          schema:
            type: integer
            minimum: 0
            maximum: 100
            default: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstitutionServicesResource"
        "400":
          description: Bad Request
        "401":
          description: Bearer token null or expired
        "502":
          description: Bad gateway
        "504":
          description: Gateway timeout
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
  /v2/services/featured:
    get:
      tags:
        - featured
      summary: Retrieve featured services
      operationId: getFeaturedServices
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeaturedServices"
        "401":
          description: Bearer token null or expired
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
        "502":
          description: Bad gateway
        "504":
          description: Gateway timeout
  /v2/services/{serviceId}:
    get:
      tags:
        - details
      summary: Retrieve service details
      description: Retrieve a service by ID
      operationId: getServiceById
      parameters:
        - name: serviceId
          in: path
          description: ID of service to return
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceDetails"
        "401":
          description: Bearer token null or expired
        "404":
          description: Not found
        "502":
          description: Bad gateway
        "504":
          description: Gateway timeout
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
  /v1/services/{service_id}:
    get:
      summary: Get Service
      description: A previously created service with the provided service ID is returned.
      operationId: getService
      parameters:
        - name: service_id
          in: path
          description: The ID of an existing Service.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Service found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServicePublic"
              example:
                department_name: IO
                organization_fiscal_code: "00000000000"
                organization_name: IO
                service_id: 5a563817fcc896087002ea46c49a
                service_name: App IO
                version: 1
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
        "401":
          description: Bearer token null or expired.
          content: {}
        "404":
          description: No service found for the provided ID.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
        "429":
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
        "500":
          description: There was an error in retrieving the service.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
  /v1/services:
    get:
      summary: Get all visible services
      description: Returns the description of all visible services.
      operationId: getVisibleServices
      parameters:
        - name: cursor
          in: query
          description: An opaque identifier that points to the next item in the collection.
          schema:
            minimum: 1
            type: string
      responses:
        "200":
          description: Found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedServiceTupleCollection"
              example:
                items:
                  - service_id: AzureDeployc49a
                    version: 1
                  - service_id: 5a25abf4fcc89605c082f042c49a
                    version: 0
                page_size: 1
        "401":
          description: Bearer token null or expired.
          content: {}
        "429":
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
        "500":
          description: There was an error in retrieving the services.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
components:
  securitySchemes:
    Bearer:
      type: apiKey
      name: Authorization
      in: header
  schemas:
    InstitutionsResource:
      allOf:
        - $ref: "#/components/schemas/Institutions"
        - $ref: "#/components/schemas/PaginationResultSet"
    Institutions:
      type: object
      properties:
        institutions:
          type: array
          items:
            $ref: "#/components/schemas/Institution"
      required:
        - institutions
    Institution:
      type: object
      properties:
        id:
          type: string
          description: Institution ID
        name:
          type: string
          description: Institution Name
        fiscal_code:
          $ref: "#/components/schemas/OrganizationFiscalCode"
      required:
        - id
        - name
        - fiscal_code
    InstitutionServicesResource:
      allOf:
        - $ref: "#/components/schemas/Services"
        - $ref: "#/components/schemas/PaginationResultSet"
    Services:
      type: object
      properties:
        services:
          type: array
          items:
            $ref: "#/components/schemas/ServiceMinified"
      required:
        - services
    ServiceMinified:
      type: object
      description: Service data (minified)
      properties:
        id:
          type: string
          description: Service ID
        name:
          type: string
          description: Service Name
          example: Tari
        version:
          type: integer
          description: Service Version
      required:
        - id
        - name
        - version
    ServiceDetails:
      type: object
      properties:
        id:
          type: string
          description: Service ID
        name:
          type: string
          description: Service name
        description:
          type: string
          description: Service description
        organization:
          $ref: "#/components/schemas/Organization"
        available_notification_channels:
          $ref: "#/components/schemas/AvailableNotificationChannels"
        metadata:
          $ref: "#/components/schemas/ServiceMetadataV2"
        version:
          type: integer
          description: Service version
      required:
        - id
        - name
        - version
        - organization
        - metadata
    FeaturedServices:
      type: object
      properties:
        services:
          type: array
          items:
            $ref: "#/components/schemas/FeaturedService"
      required:
        - services
    FeaturedService:
      allOf:
        - $ref: "#/components/schemas/ServiceMinified"
        - type: object
          properties:
            organization_name:
              type: string
              description: Organization Name
    ServiceMetadataV2:
      description: A set of service metadata properties
      allOf:
        - $ref: "#/components/schemas/ServiceBaseMetadata"
        - type: object
          properties:
            topic:
              $ref: "#/components/schemas/ServiceTopic"
    ServiceTopic:
      type: object
      properties:
        id:
          type: number
          description: The topic id
          example: 3
        name:
          type: string
          description: The topic name
          example: "Benessere sociale"
      required:
        - id
        - name
    ServiceBaseMetadata:
      type: object
      description: A set of common service metadata properties
      properties:
        web_url:
          type: string
          minLength: 1
        app_ios:
          type: string
          minLength: 1
        app_android:
          type: string
          minLength: 1
        tos_url:
          type: string
          minLength: 1
        privacy_url:
          type: string
          minLength: 1
        address:
          type: string
          minLength: 1
        phone:
          type: string
          minLength: 1
        email:
          type: string
          minLength: 1
        pec:
          type: string
          minLength: 1
        cta:
          type: string
          minLength: 1
        token_name:
          type: string
          minLength: 1
        support_url:
          type: string
          minLength: 1
        category:
          type: string
          enum: [SPECIAL, STANDARD]
        custom_special_flow:
          type: string
          minLength: 1
        scope:
          type: string
          enum: [NATIONAL, LOCAL]
      required:
        - scope
    Organization:
      type: object
      properties:
        name:
          type: string
          minLength: 1
        fiscal_code:
          $ref: "https://raw.githubusercontent.com/pagopa/io-services-cms/master/packages/io-services-cms-models/openapi/commons-schemas.yaml#/OrganizationFiscalCode"
        department_name:
          type: string
          minLength: 1
      required:
        - name
        - fiscal_code
    OrganizationFiscalCode:
      type: string
      x-import: "@pagopa/ts-commons/lib/strings"
      format: OrganizationFiscalCode
    PaginationResultSet:
      type: object
      properties:
        offset:
          type: number
          description: result set offset
        limit:
          type: number
          description: result set size
        count:
          type: number
          description: total record count
      required:
        - offset
        - limit
        - count
    AvailableNotificationChannels:
      description: All the notification channels available for a service
      type: array
      items:
        $ref: "#/components/schemas/NotificationChannel"
    NotificationChannel:
      type: string
      description: All notification channels
      enum:
        - EMAIL
        - WEBHOOK
      example: [EMAIL]
    ScopeType:
      type: string
      description: Institutions/Services Scopes
      enum:
        - NATIONAL
        - LOCAL
    ServicePublic:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/ServicePublic"
    ServiceId:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/ServiceId"
    ServiceName:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/ServiceName"
    ServiceMetadata:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/ServiceMetadata"
    CommonServiceMetadata:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/CommonServiceMetadata"
    StandardServiceMetadata:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/StandardServiceMetadata"
    SpecialServiceMetadata:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/SpecialServiceMetadata"
    MaxAllowedPaymentAmount:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/MaxAllowedPaymentAmount"
    OrganizationName:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/OrganizationName"
    DepartmentName:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/DepartmentName"
    PaginatedServiceTupleCollection:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/PaginatedServiceTupleCollection"
    PaginationResponse:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/PaginationResponse"
    ServiceTupleCollection:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/ServiceTupleCollection"
    ServiceTuple:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/ServiceTuple"
    ServiceScope:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/ServiceScope"
    ProblemJson:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/ProblemJson"
