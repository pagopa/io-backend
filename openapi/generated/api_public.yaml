swagger: '2.0'
info:
  version: 16.10.0
  title: Public API
  description: Mobile and web proxy API gateway.
host: localhost
basePath: /
schemes:
  - https
paths:
  /:
    x-swagger-router-controller: ServerInfoController
    get:
      operationId: Redirect
      summary: Redirect
      description: |
        Redirects to a specific URL.
      responses:
        '302':
          description: HTTP Redirect.
          headers:
            Location:
              description: URL where the client is being redirected.
              type: string
  /info:
    x-swagger-router-controller: ServerInfoController
    get:
      operationId: getServerInfo
      summary: Runtime server info
      description: |
        Returns runtime information about the server.
      responses:
        '200':
          description: Runtime server info.
          schema:
            $ref: '#/definitions/ServerInfo'
          examples:
            application/json:
              version: 0.0.1
              min_app_version: 0.0.0
              min_app_version_pagopa: 0.0.0
  /api/v1/status:
    x-swagger-router-controller: ServerStatusController
    get:
      summary: Get service statuses
      description: Returns the current status of all microservices.
      responses:
        '200':
          description: App backend microservices statuses.
          schema:
            $ref: '#/definitions/ServicesStatus'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ProblemJson'
definitions:
  ProblemJson:
    type: object
    properties:
      type:
        type: string
        format: uri
        description: |-
          An absolute URI that identifies the problem type. When dereferenced,
          it SHOULD provide human-readable documentation for the problem type
          (e.g., using HTML).
        default: about:blank
        example: https://example.com/problem/constraint-violation
      title:
        type: string
        description: |-
          A short, summary of the problem type. Written in english and readable
          for engineers (usually not suited for non technical stakeholders and
          not localized); example: Service Unavailable
      status:
        type: integer
        format: int32
        description: >-
          The HTTP status code generated by the origin server for this
          occurrence of the problem.
        minimum: 100
        maximum: 600
        exclusiveMaximum: true
        example: 200
      detail:
        type: string
        description: |-
          A human readable explanation specific to this occurrence of the
          problem.
        example: There was an error processing the request
      instance:
        type: string
        format: uri
        description: >-
          An absolute URI that identifies the specific occurrence of the
          problem.

          It may or may not yield further information if dereferenced.
  ServerInfo:
    type: object
    title: Server information
    properties:
      version:
        type: string
      min_app_version:
        $ref: '#/definitions/VersionPerPlatform'
      min_app_version_pagopa:
        $ref: '#/definitions/VersionPerPlatform'
    required:
      - version
      - min_app_version
      - min_app_version_pagopa
  VersionPerPlatform:
    type: object
    title: Specify a version for ios and another for android
    properties:
      ios:
        type: string
      android:
        type: string
    required:
      - ios
      - android
  ServicesStatus:
    type: object
    properties:
      services:
        type: array
        items:
          $ref: '#/definitions/ServiceStatus'
    required:
      - services
  ServiceStatus:
    type: object
    properties:
      id:
        type: string
      status:
        $ref: '#/definitions/StatusEnum'
      details:
        type: string
    required:
      - id
      - status
      - details
  StatusEnum:
    type: string
    description: Status of a service
    enum:
      - OK
      - WARNING
      - CRITICAL
      - PARTIAL_AVAILABILITY
      - MANTAINANCE
consumes:
  - application/json
produces:
  - application/json
