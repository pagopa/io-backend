swagger: '2.0'
info:
  version: 13.21.0
  title: Public API
  description: Mobile and web proxy API gateway.
host: localhost
basePath: /
schemes:
  - https
paths:
  /info:
    x-swagger-router-controller: ServerInfoController
    get:
      operationId: getServerInfo
      summary: Runtime server info
      description: |
        Returns runtime information about the server.
      responses:
        '200':
          description: Runtime server info.
          schema:
            $ref: '#/definitions/ServerInfo'
          examples:
            application/json:
              version: 0.0.1
              min_app_version: 0.0.0
              min_app_version_pagopa: 0.0.0
  /test-login:
    x-swagger-router-controller: AuthenticationController
    post:
      operationId: testLogin
      summary: Login Test User with password
      description: Login Test User with password and Fiscal Code
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/PasswordLogin'
          required: true
          x-examples:
            application/json:
              username: AAABBB01C02D345Z
              password: secret
        - $ref: '#/parameters/JwkPubKeyToken'
        - $ref: '#/parameters/JwkPubKeyHashAlgorithm'
        - $ref: '#/parameters/LoginType'
      responses:
        '200':
          description: Access token
          schema:
            $ref: '#/definitions/AccessToken'
        '401':
          description: Invalid credentials
        '500':
          description: Unavailable service
          schema:
            $ref: '#/definitions/ProblemJson'
  /login:
    get:
      operationId: login
      summary: Login SPID/CIE
      description: Login with SPID or CIE for IO APP
      parameters:
        - $ref: '#/parameters/EntityId'
        - $ref: '#/parameters/AuthLevel'
        - $ref: '#/parameters/JwkPubKeyToken'
        - $ref: '#/parameters/JwkPubKeyHashAlgorithm'
        - $ref: '#/parameters/LoginType'
      responses:
        '302':
          description: Redirect to IDP
          headers:
            Location:
              type: string
              description: Redirect endpoint with SAML AuthNRequest query parameters
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemJson'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ProblemJson'
        '503':
          description: Service unavailable
definitions:
  FiscalCode:
    type: string
    description: User's fiscal code.
    format: FiscalCode
    x-import: '@pagopa/ts-commons/lib/strings'
    example: SPNDNL80R13C555X
  ProblemJson:
    type: object
    properties:
      type:
        type: string
        format: uri
        description: |-
          An absolute URI that identifies the problem type. When dereferenced,
          it SHOULD provide human-readable documentation for the problem type
          (e.g., using HTML).
        default: about:blank
        example: https://example.com/problem/constraint-violation
      title:
        type: string
        description: |-
          A short, summary of the problem type. Written in english and readable
          for engineers (usually not suited for non technical stakeholders and
          not localized); example: Service Unavailable
      status:
        type: integer
        format: int32
        description: >-
          The HTTP status code generated by the origin server for this
          occurrence

          of the problem.
        minimum: 100
        maximum: 600
        exclusiveMaximum: true
        example: 200
      detail:
        type: string
        description: |-
          A human readable explanation specific to this occurrence of the
          problem.
        example: There was an error processing the request
      instance:
        type: string
        format: uri
        description: >-
          An absolute URI that identifies the specific occurrence of the
          problem.

          It may or may not yield further information if dereferenced.
  ServerInfo:
    type: object
    title: Server information
    properties:
      version:
        type: string
      min_app_version:
        $ref: '#/definitions/VersionPerPlatform'
      min_app_version_pagopa:
        $ref: '#/definitions/VersionPerPlatform'
    required:
      - version
      - min_app_version
      - min_app_version_pagopa
  VersionPerPlatform:
    type: object
    title: Specify a version for ios and another for android
    properties:
      ios:
        type: string
      android:
        type: string
    required:
      - ios
      - android
  PasswordLogin:
    type: object
    properties:
      username:
        $ref: '#/definitions/FiscalCode'
      password:
        type: string
        minLength: 1
    required:
      - username
      - password
  AccessToken:
    type: object
    properties:
      token:
        type: string
        minLength: 1
        description: 48 bytes token (hex encoded)
        example: >-
          c77de47586c841adbd1a1caeb90dce25dcecebed620488a4f932a6280b10ee99a77b6c494a8a6e6884ccbeb6d3fe736b
    required:
      - token
consumes:
  - application/json
produces:
  - application/json
parameters:
  EntityId:
    name: entityID
    in: query
    type: string
    enum:
      - lepidaid
      - infocertid
      - sielteid
      - namirialid
      - timid
      - arubaid
      - posteid
      - spiditalia
      - teamsystemid
      - ehtid
      - infocamereid
      - intesiid
      - xx_servizicie_coll
      - xx_servizicie
      - xx_servizicie_test
    description: An ID that refers to a specific IDP
    required: true
  AuthLevel:
    name: authLevel
    in: query
    type: string
    enum:
      - SpidL2
      - SpidL3
    description: SPID AuthLevel
    required: true
    x-example: SpidL2
  LoginType:
    name: loginType
    in: header
    type: string
    enum:
      - LV
      - LEGACY
    required: false
    x-example: LEGACY
  JwkPubKeyToken:
    in: header
    name: x-pagopa-lollipop-pub-key
    type: string
    description: represents a Base64url encode of a JWK Public Key
    format: JwkPublicKeyFromToken
    x-import: '@pagopa/ts-commons/lib/jwk'
    x-example: >-
      eyJrdHkiOiJFQyIsImNydiI6IlAtMjU2IiwieCI6IjRmMzB6dUdNcm9kRXl3cEoxelZKbWFRLVYtZlM4OVZBTW8yZnN6dWxOTmsiLCJ5IjoibG5NdmExengxaFJncVY5enVEU3dkV0dyUlhTREl4UXQ1YVJVeG1EVW44NCJ9
  JwkPubKeyHashAlgorithm:
    in: header
    name: x-pagopa-lollipop-pub-key-hash-algo
    type: string
    enum:
      - sha256
      - sha384
      - sha512
    description: Represents the selected hashing algorithm for jwk thumbprint
    x-example: sha256
