openapi: 3.0.2
info:
  title: Internal API for Communication domain
  description: Internal API for Communication domain to handle push notifications.
  version: 16.15.0
servers:
  - url: https://localhost/api/v1
security:
  - Token: []
paths:
  /notify:
    post:
      summary: Notify a user
      description: Post the notification to the user using a push notification.
      operationId: notify
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
        required: true
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
              example:
                message: ok
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemJson'
        '401':
          description: Token null or invalid.
          content: {}
        '500':
          description: >-
            There was an error in forwarding the notification to the
            Notification Hub.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemJson'
    x-swagger-router-controller: NotificationController
components:
  schemas:
    NotificationMessage:
      allOf:
        - $ref: '#/components/schemas/CreatedMessageWithContent'
        - $ref: '#/components/schemas/CreatedMessageWithoutContent'
      x-one-of: true
    Notification:
      title: Notification
      required:
        - message
        - sender_metadata
      type: object
      properties:
        message:
          $ref: '#/components/schemas/NotificationMessage'
        sender_metadata:
          $ref: '#/components/schemas/SenderMetadata'
      description: A received Notification.
    SuccessResponse:
      type: object
      properties:
        message:
          type: string
    ServiceId:
      type: string
      description: |-
        The ID of the Service. Equals the subscriptionId of a registered
        API user.
      minLength: 1
    CreatedMessageWithContent:
      type: object
      properties:
        id:
          type: string
        fiscal_code:
          $ref: '#/components/schemas/FiscalCode'
        time_to_live:
          $ref: '#/components/schemas/TimeToLiveSeconds'
        created_at:
          $ref: '#/components/schemas/Timestamp'
        content:
          $ref: '#/components/schemas/NewMessageContent'
        sender_service_id:
          $ref: '#/components/schemas/ServiceId'
      required:
        - id
        - fiscal_code
        - created_at
        - content
        - sender_service_id
    CreatedMessageWithoutContent:
      type: object
      properties:
        id:
          type: string
        fiscal_code:
          $ref: '#/components/schemas/FiscalCode'
        time_to_live:
          $ref: '#/components/schemas/TimeToLiveSeconds'
        created_at:
          $ref: '#/components/schemas/Timestamp'
        sender_service_id:
          $ref: '#/components/schemas/ServiceId'
      required:
        - id
        - fiscal_code
        - created_at
        - sender_service_id
    TimeToLiveSeconds:
      type: integer
      default: 3600
      minimum: 3600
      maximum: 604800
      description: |-
        This parameter specifies for how long (in seconds) the system will
        try to deliver the message to the channels configured by the user.
      example: 3600
    SenderMetadata:
      title: Sender metadata
      description: Metadata associated to a sender (service).
      type: object
      properties:
        service_name:
          $ref: '#/components/schemas/ServiceName'
        organization_name:
          $ref: '#/components/schemas/OrganizationName'
        department_name:
          $ref: '#/components/schemas/DepartmentName'
      required:
        - service_name
        - organization_name
        - department_name
    ServiceName:
      type: string
      description: The name of the service. Will be added to the content of sent messages.
      minLength: 1
    OrganizationName:
      type: string
      description: |-
        The organization that runs the service. Will be added to the content
        of sent messages to identify the sender.
      minLength: 1
    DepartmentName:
      type: string
      description: |-
        The department inside the organization that runs the service. Will
        be added to the content of sent messages.
      minLength: 1
    Timestamp:
      type: string
      format: UTCISODateFromString
      description: A date-time field in ISO-8601 format and UTC timezone.
      x-import: '@pagopa/ts-commons/lib/dates'
      example: '2018-10-13T00:00:00.000Z'
    FiscalCode:
      type: string
      description: User's fiscal code.
      format: FiscalCode
      x-import: '@pagopa/ts-commons/lib/strings'
      example: SPNDNL80R13C555X
    MessageContent:
      allOf:
        - $ref: '#/components/schemas/MessageContentBase'
        - type: object
          properties:
            payment_data:
              $ref: '#/components/schemas/PaymentData'
            prescription_data:
              $ref: '#/components/schemas/PrescriptionData'
            legal_data:
              $ref: '#/components/schemas/LegalData'
            eu_covid_cert:
              $ref: '#/components/schemas/EUCovidCert'
            third_party_data:
              $ref: '#/components/schemas/ThirdPartyData'
            due_date:
              $ref: '#/components/schemas/Timestamp'
    NewMessageContent:
      allOf:
        - $ref: '#/components/schemas/MessageContentBase'
        - type: object
          properties:
            payment_data:
              $ref: '#/components/schemas/PaymentDataWithRequiredPayee'
            due_date:
              $ref: '#/components/schemas/Timestamp'
            prescription_data:
              $ref: '#/components/schemas/PrescriptionData'
            eu_covid_cert:
              $ref: '#/components/schemas/EUCovidCert'
            third_party_data:
              $ref: '#/components/schemas/ThirdPartyData'
            legal_data:
              $ref: '#/components/schemas/LegalData'
    MessageContentBase:
      type: object
      properties:
        subject:
          $ref: '#/components/schemas/MessageSubject'
        markdown:
          $ref: '#/components/schemas/MessageBodyMarkdown'
        require_secure_channels:
          type: boolean
          description: When true, messages won't trigger email notifications (only push).
      required:
        - subject
        - markdown
    MessageSubject:
      type: string
      description: >-
        The subject of the message - note that only some notification

        channels support the display of a subject. When a subject is not
        provided,

        one gets generated from the client attributes.
      minLength: 10
      maxLength: 120
      example: Welcome new user !
    MessageBodyMarkdown:
      type: string
      description: |-
        The full version of the message, in plain text or Markdown format. The
        content of this field will be delivered to channels that don't have any
        limit in terms of content size (e.g. email, etc...).
      minLength: 80
      maxLength: 10000
      example: |-
        # This is a markdown header

        to show how easily markdown can be converted to **HTML**

        Remember: this has to be a long text.
    PaymentNoticeNumber:
      description: >-
        The field "Numero Avviso" of pagoPa, needed to identify the payment.
        Format is `<aux digit(1n)>[<application code> (2n)]<codice IUV
        (15|17n)>`. See [pagoPa
        specs](https://docs.pagopa.it/saci/specifiche-attuative-dei-codici-identificativi-di-versamento-riversamento-e-rendicontazione/premessa)
        for more info on this field and the IUV.
      type: string
      pattern: ^[0123][0-9]{17}$
    PaymentAmount:
      description: >-
        Amount of payment in euro cent. PagoPA accepts up to 9999999999 euro
        cents.
      type: integer
      minimum: 1
      maximum: 9999999999
    PaymentData:
      allOf:
        - $ref: '#/components/schemas/PaymentDataBase'
        - type: object
          properties:
            payee:
              $ref: '#/components/schemas/Payee'
    PaymentDataBase:
      type: object
      description: Metadata needed to process pagoPA payments.
      properties:
        amount:
          $ref: '#/components/schemas/PaymentAmount'
        notice_number:
          $ref: '#/components/schemas/PaymentNoticeNumber'
        invalid_after_due_date:
          type: boolean
          default: false
      required:
        - amount
        - notice_number
    Payee:
      type: object
      description: Metadata needed to explicit payment's payee.
      properties:
        fiscal_code:
          type: string
          description: Organization fiscal code.
          format: OrganizationFiscalCode
          x-import: '@pagopa/ts-commons/lib/strings'
          example: '12345678901'
      required:
        - fiscal_code
    PaymentDataWithRequiredPayee:
      allOf:
        - $ref: '#/components/schemas/PaymentDataBase'
        - type: object
          properties:
            payee:
              $ref: '#/components/schemas/Payee'
          required:
            - payee
    PrescriptionData:
      type: object
      description: Metadata needed to process medical prescriptions.
      properties:
        nre:
          description: >-
            The field *Numero ricetta elettronica* identifies the medical
            prescription at national level.
          type: string
          minLength: 15
          maxLength: 15
        iup:
          description: >-
            The field *Identificativo Unico di Prescrizione* identifies the
            medical prescription at regional level.
          type: string
          minLength: 1
          maxLength: 16
        prescriber_fiscal_code:
          type: string
          description: Fiscal code of the Doctor that made the prescription.
          format: FiscalCode
          x-import: '@pagopa/ts-commons/lib/strings'
          example: TCNZRO80R13C555Y
      required:
        - nre
    EUCovidCert:
      type: object
      description: Paylod with access token to retrieve a EU Covid Certificate
      properties:
        auth_code:
          type: string
      required:
        - auth_code
    ThirdPartyData:
      type: object
      description: >-
        Payload containing all information needed to retrieve and visualize
        third party message details
      properties:
        id:
          type: string
          description: >-
            Unique id for retrieving third party enriched information about the
            message
          minLength: 1
        original_sender:
          type: string
          description: Either a ServiceId or a simple string representing the sender name
          minLength: 1
        original_receipt_date:
          $ref: '#/components/schemas/Timestamp'
        has_attachments:
          type: boolean
          default: false
        has_remote_content:
          type: boolean
          default: false
        has_precondition:
          type: string
          x-extensible-enum:
            - ALWAYS
            - ONCE
            - NEVER
        summary:
          type: string
          minLength: 1
        configuration_id:
          type: string
          description: Ulid string.
          format: Ulid
          x-import: '@pagopa/ts-commons/lib/strings'
          example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
      required:
        - id
    LegalData:
      type: object
      properties:
        sender_mail_from:
          type: string
          minLength: 1
        has_attachment:
          type: boolean
          default: false
        message_unique_id:
          type: string
          minLength: 1
        original_message_url:
          type: string
          minLength: 1
        pec_server_service_id:
          $ref: '#/components/schemas/ServiceId'
      required:
        - sender_mail_from
        - has_attachment
        - message_unique_id
    ProblemJson:
      type: object
      properties:
        type:
          type: string
          format: uri
          description: |-
            An absolute URI that identifies the problem type. When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          default: about:blank
          example: https://example.com/problem/constraint-violation
        title:
          type: string
          description: >-
            A short, summary of the problem type. Written in english and
            readable

            for engineers (usually not suited for non technical stakeholders and

            not localized); example: Service Unavailable
        status:
          type: integer
          format: int32
          description: >-
            The HTTP status code generated by the origin server for this
            occurrence of the problem.
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
          example: 200
        detail:
          type: string
          description: |-
            A human readable explanation specific to this occurrence of the
            problem.
          example: There was an error processing the request
        instance:
          type: string
          format: uri
          description: >-
            An absolute URI that identifies the specific occurrence of the
            problem.

            It may or may not yield further information if dereferenced.
  securitySchemes:
    Token:
      type: apiKey
      name: token
      in: query
