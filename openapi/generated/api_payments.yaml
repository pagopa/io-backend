openapi: 3.0.2
info:
  title: Proxy API for payment domain
  description: Mobile and web backend API for payments domain.
  version: 16.18.0
servers:
  - url: https://api-app.io.pagopa.it/api/v1
security:
  - Bearer: []
paths:
  /payment-requests/{rptId}:
    get:
      summary: Get Payment Info
      description: Retrieve information about a payment
      operationId: getPaymentInfo
      parameters:
        - name: rptId
          in: path
          description: Unique identifier for payments.
          required: true
          schema:
            type: string
        - name: test
          in: query
          description: Use test environment of PagoPAClient
          schema:
            type: boolean
      responses:
        '200':
          description: Payment information retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequestsGetResponse'
              example:
                importoSingoloVersamento: 200,
                codiceContestoPagamento: ABC123
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemJson'
        '401':
          description: Bearer token null or expired.
          content: {}
        '500':
          description: PagoPA services are not available or request is rejected
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentProblemJson'
        '504':
          description: gateway timeout.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentProblemJson'
  /payment-activations:
    post:
      summary: Activate Payment
      description: Require a lock (activation) for a payment
      operationId: activatePayment
      parameters:
        - name: test
          in: query
          description: Use test environment of PagoPAClient
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentActivationsPostRequest'
        required: true
      responses:
        '200':
          description: Payment activation process started
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentActivationsPostResponse'
              example:
                importoSingoloVersamento: 200
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemJson'
        '401':
          description: Bearer token null or expired.
          content: {}
        '500':
          description: PagoPA services are not available or request is rejected
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentProblemJson'
        '504':
          description: gateway timeout.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentProblemJson'
  /payment-activations/{codiceContestoPagamento}:
    get:
      summary: Get Activation status
      description: Check the activation status to retrieve the paymentId
      operationId: getActivationStatus
      parameters:
        - name: codiceContestoPagamento
          in: path
          description: Transaction Id used to identify the communication flow.
          required: true
          schema:
            type: string
        - name: test
          in: query
          description: Use test environment of PagoPAClient
          schema:
            type: boolean
      responses:
        '200':
          description: Payment information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentActivationsGetResponse'
              example:
                idPagamento: '123455'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemJson'
        '401':
          description: Bearer token null or expired.
          content: {}
        '404':
          description: Activation status not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemJson'
        '500':
          description: Unavailable service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemJson'
  /payment-info/{rptId}:
    get:
      summary: Get Payment Info
      description: Retrieve information about a payment
      operationId: getPaymentInfoV2
      parameters:
        - name: rptId
          in: path
          description: Unique identifier for payments.
          required: true
          schema:
            type: string
        - name: test
          in: query
          description: Use test environment of PagoPAEcommerceClient
          schema:
            type: boolean
      responses:
        '200':
          description: Payment information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentInfoResponse'
              example:
                amount: 11400
                description: PAGAMENTO TARI PRIMA RATA
                dueDate: '2025-05-31'
        '401':
          description: Bearer token null or expired.
          content: {}
        '404':
          description: This error occurs when submitting a non-existing RPT id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentInfoNotFoundResponse'
        '409':
          description: Conflict on payment status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentInfoConflictResponse'
        '500':
          description: Unauthorized, access token missing or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemJson'
        '502':
          description: PagoPA services are not available or request is rejected by PagoPa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentInfoBadGatewayResponse'
        '503':
          description: EC services are not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentInfoUnavailableResponse'
    x-swagger-router-controller: PagoPAEcommerceController
components:
  schemas:
    ProblemJson:
      type: object
      properties:
        type:
          type: string
          format: uri
          description: |-
            An absolute URI that identifies the problem type. When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          default: about:blank
          example: https://example.com/problem/constraint-violation
        title:
          type: string
          description: >-
            A short, summary of the problem type. Written in english and
            readable

            for engineers (usually not suited for non technical stakeholders and

            not localized); example: Service Unavailable
        status:
          type: integer
          format: int32
          description: >-
            The HTTP status code generated by the origin server for this
            occurrence of the problem.
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
          example: 200
        detail:
          type: string
          description: |-
            A human readable explanation specific to this occurrence of the
            problem.
          example: There was an error processing the request
        instance:
          type: string
          format: uri
          description: >-
            An absolute URI that identifies the specific occurrence of the
            problem.

            It may or may not yield further information if dereferenced.
    PaymentProblemJson:
      description: >-
        A ProblemJson-like type specific for the GetPayment and ActivatePayment
        operations
      type: object
      properties:
        type:
          type: string
          format: uri
          description: |-
            An absolute URI that identifies the problem type. When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          default: about:blank
          example: https://example.com/problem/constraint-violation
        title:
          type: string
          description: >-
            A short, summary of the problem type. Written in english and
            readable

            for engineers (usually not suited for non technical stakeholders and

            not localized); example: Service Unavailable
        status:
          type: integer
          format: int32
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
        detail:
          description: >-
            DEPRECATED. Fault codes for the PagoPA Verifica and Attiva
            operations.

            Possible fault codes are:

            - `PAYMENT_DUPLICATED`

            - `INVALID_AMOUNT`

            - `PAYMENT_ONGOING`

            - `PAYMENT_EXPIRED`

            - `PAYMENT_UNAVAILABLE`

            - `PAYMENT_UNKNOWN`

            - `DOMAIN_UNKNOWN`

            - `PPT_MULTI_BENEFICIARIO`

            - `GENERIC_ERROR`
          type: string
          x-extensible-enum:
            - PAYMENT_DUPLICATED
            - INVALID_AMOUNT
            - PAYMENT_ONGOING
            - PAYMENT_EXPIRED
            - PAYMENT_UNAVAILABLE
            - PAYMENT_UNKNOWN
            - DOMAIN_UNKNOWN
            - PPT_MULTI_BENEFICIARIO
            - GENERIC_ERROR
        detail_v2:
          description: >-
            This enumeration includes all possible fault codes for the
            PagoPA/Controparte Verifica
            ([`getPaymentInfo`](#/default/getPaymentInfo)) and Attiva
            ([`activatePayment`](#/default/activatePayment)) operations.

            For further information visit
            https://docs.pagopa.it/gestionedeglierrori/struttura-degli-errori/fault-code.

            Possible fault codes are:
              - `PPT_SYSTEM_ERROR`
              - `PPT_AUTORIZZAZIONE`
              - `PPT_AUTENTICAZIONE`
              - `PPT_SINTASSI_XSD`
              - `PPT_SINTASSI_EXTRAXSD`
              - `PPT_SEMANTICA`
              - `PPT_RPT_DUPLICATA`
              - `PPT_RPT_SCONOSCIUTA`
              - `PPT_RT_SCONOSCIUTA`
              - `PPT_RT_NONDISPONIBILE`
              - `PPT_SUPERAMENTOSOGLIA`
              - `PPT_SEGREGAZIONE`
              - `PPT_TIPOFIRMA_SCONOSCIUTO`
              - `PPT_ERRORE_FORMATO_BUSTA_FIRMATA`
              - `PPT_FIRMA_INDISPONIBILE`
              - `PPT_ID_CARRELLO_DUPLICATO`
              - `PPT_OPER_NON_STORNABILE`
              - `PPT_OPER_NON_REVOCABILE`
              - `PPT_WISP_TIMEOUT_RECUPERO_SCELTA`
              - `PPT_WISP_SESSIONE_SCONOSCIUTA`
              - `PPT_CANALE_ERRORE`
              - `PPT_CODIFICA_PSP_SCONOSCIUTA`
              - `PPT_PSP_SCONOSCIUTO`
              - `PPT_PSP_DISABILITATO`
              - `PPT_TIPO_VERSAMENTO_SCONOSCIUTO`
              - `PPT_INTERMEDIARIO_PSP_SCONOSCIUTO`
              - `PPT_INTERMEDIARIO_PSP_DISABILITATO`
              - `PPT_CANALE_IRRAGGIUNGIBILE`
              - `PPT_CANALE_SERVIZIO_NONATTIVO`
              - `PPT_CANALE_TIMEOUT`
              - `PPT_CANALE_NONRISOLVIBILE`
              - `PPT_CANALE_INDISPONIBILE`
              - `PPT_CANALE_SCONOSCIUTO`
              - `PPT_CANALE_DISABILITATO`
              - `PPT_CANALE_ERR_PARAM_PAG_IMM`
              - `PPT_CANALE_ERRORE_RESPONSE`
              - `PPT_RT_DUPLICATA`
              - `PPT_ISCRIZIONE_NON_PRESENTE`
              - `PPT_ULTERIORE_ISCRIZIONE`
              - `PPT_PDD_IRRAGGIUNGIBILE`
              - `PPT_ERRORE_EMESSO_DA_PAA`
              - `PPT_DOMINIO_SCONOSCIUTO`
              - `PPT_DOMINIO_DISABILITATO`
              - `PPT_INTERMEDIARIO_PA_SCONOSCIUTO`
              - `PPT_INTERMEDIARIO_PA_DISABILITATO`
              - `PPT_STAZIONE_INT_PA_IRRAGGIUNGIBILE`
              - `PPT_STAZIONE_INT_PA_SERVIZIO_NONATTIVO`
              - `PPT_STAZIONE_INT_PA_ERRORE_RESPONSE`
              - `PPT_STAZIONE_INT_PA_TIMEOUT`
              - `PPT_STAZIONE_INT_PA_NONRISOLVIBILE`
              - `PPT_STAZIONE_INT_PA_INDISPONIBILE`
              - `PPT_STAZIONE_INT_PA_SCONOSCIUTA`
              - `PPT_STAZIONE_INT_PA_DISABILITATA`
              - `PPT_ID_FLUSSO_SCONOSCIUTO`
              - `PAA_ID_DOMINIO_ERRATO`
              - `PAA_ID_INTERMEDIARIO_ERRATO`
              - `PAA_STAZIONE_INT_ERRATA`
              - `PAA_RPT_SCONOSCIUTA`
              - `PAA_RT_DUPLICATA`
              - `PAA_TIPOFIRMA_SCONOSCIUTO`
              - `PAA_ERRORE_FORMATO_BUSTA_FIRMATA`
              - `PAA_FIRMA_INDISPONIBILE`
              - `PAA_FIRMA_ERRATA`
              - `PAA_PAGAMENTO_SCONOSCIUTO`
              - `PAA_PAGAMENTO_DUPLICATO`
              - `PAA_PAGAMENTO_IN_CORSO`
              - `PAA_PAGAMENTO_ANNULLATO`
              - `PAA_PAGAMENTO_SCADUTO`
              - `PAA_SINTASSI_XSD`
              - `PAA_SINTASSI_EXTRAXSD`
              - `PAA_SEMANTICA`
              - `PAA_ATTIVA_RPT_IMPORTO_NON_VALIDO`
              - `PAA_SYSTEM_ERROR`
              - `CANALE_SINTASSI_XSD`
              - `CANALE_SINTASSI_EXTRAXSD`
              - `CANALE_SEMANTICA`
              - `CANALE_RPT_DUPLICATA`
              - `CANALE_RPT_SCONOSCIUTA`
              - `CANALE_RPT_RIFIUTATA`
              - `CANALE_RT_SCONOSCIUTA`
              - `CANALE_RT_NON_DISPONIBILE`
              - `CANALE_INDISPONIBILE`
              - `CANALE_RICHIEDENTE_ERRATO`
              - `CANALE_SYSTEM_ERROR`
              - `PPT_LOCAL_ERROR_PROTOCOLLO`
              - `PPT_LOCAL_ERROR_EXTRAXSD`
              - `PPT_LOCAL_ERROR_FSM`
              - `PPT_RT_SEGNO_DISCORDE`
              - `CANALE_FIRMA_SCONOSCIUTA`
              - `CANALE_BUSTA_ERRATA`
              - `CANALE_NEGA_CONTABILIZZAZIONE`
              - `CANALE_CARRELLO_DUPLICATO_KO`
              - `CANALE_CARRELLO_DUPLICATO_UNKNOWN`
              - `CANALE_CARRELLO_DUPLICATO_OK`
              - `OGGETTO_DISABILITATO`
              - `PPT_IBAN_NON_CENSITO`
              - `PPT_RT_IN_GESTIONE`
              - `CANALE_CONVENZIONE_NON_VALIDA`
              - `PAA_CONVENZIONE_NON_VALIDA`
              - `PPT_IMPORTO_ERRATO`
              - `PPT_TOKEN_SCONOSCIUTO`
              - `PPT_TOKEN_SCADUTO`
              - `PPT_POSIZIONE_SCONOSCIUTA`
              - `PPT_DATI_POSIZIONE_GIA_CONOSCIUTI`
              - `PPT_ESITO_GIA_ACQUISITO`
              - `PPT_PAGAMENTO_IN_CORSO`
              - `PPT_PAGAMENTO_DUPLICATO`
              - `PPT_MULTI_BENEFICIARIO`
              - `PPT_ERRORE`
              - `GENERIC_ERROR`
          type: string
          x-extensible-enum:
            - PPT_SYSTEM_ERROR
            - PPT_AUTORIZZAZIONE
            - PPT_AUTENTICAZIONE
            - PPT_SINTASSI_XSD
            - PPT_SINTASSI_EXTRAXSD
            - PPT_SEMANTICA
            - PPT_RPT_DUPLICATA
            - PPT_RPT_SCONOSCIUTA
            - PPT_RT_SCONOSCIUTA
            - PPT_RT_NONDISPONIBILE
            - PPT_SUPERAMENTOSOGLIA
            - PPT_SEGREGAZIONE
            - PPT_TIPOFIRMA_SCONOSCIUTO
            - PPT_ERRORE_FORMATO_BUSTA_FIRMATA
            - PPT_FIRMA_INDISPONIBILE
            - PPT_ID_CARRELLO_DUPLICATO
            - PPT_OPER_NON_STORNABILE
            - PPT_OPER_NON_REVOCABILE
            - PPT_WISP_TIMEOUT_RECUPERO_SCELTA
            - PPT_WISP_SESSIONE_SCONOSCIUTA
            - PPT_CANALE_ERRORE
            - PPT_CODIFICA_PSP_SCONOSCIUTA
            - PPT_PSP_SCONOSCIUTO
            - PPT_PSP_DISABILITATO
            - PPT_TIPO_VERSAMENTO_SCONOSCIUTO
            - PPT_INTERMEDIARIO_PSP_SCONOSCIUTO
            - PPT_INTERMEDIARIO_PSP_DISABILITATO
            - PPT_CANALE_IRRAGGIUNGIBILE
            - PPT_CANALE_SERVIZIO_NONATTIVO
            - PPT_CANALE_TIMEOUT
            - PPT_CANALE_NONRISOLVIBILE
            - PPT_CANALE_INDISPONIBILE
            - PPT_CANALE_SCONOSCIUTO
            - PPT_CANALE_DISABILITATO
            - PPT_CANALE_ERR_PARAM_PAG_IMM
            - PPT_CANALE_ERRORE_RESPONSE
            - PPT_RT_DUPLICATA
            - PPT_ISCRIZIONE_NON_PRESENTE
            - PPT_ULTERIORE_ISCRIZIONE
            - PPT_PDD_IRRAGGIUNGIBILE
            - PPT_ERRORE_EMESSO_DA_PAA
            - PPT_DOMINIO_SCONOSCIUTO
            - PPT_DOMINIO_DISABILITATO
            - PPT_INTERMEDIARIO_PA_SCONOSCIUTO
            - PPT_INTERMEDIARIO_PA_DISABILITATO
            - PPT_STAZIONE_INT_PA_IRRAGGIUNGIBILE
            - PPT_STAZIONE_INT_PA_SERVIZIO_NONATTIVO
            - PPT_STAZIONE_INT_PA_ERRORE_RESPONSE
            - PPT_STAZIONE_INT_PA_TIMEOUT
            - PPT_STAZIONE_INT_PA_NONRISOLVIBILE
            - PPT_STAZIONE_INT_PA_INDISPONIBILE
            - PPT_STAZIONE_INT_PA_SCONOSCIUTA
            - PPT_STAZIONE_INT_PA_DISABILITATA
            - PPT_ID_FLUSSO_SCONOSCIUTO
            - PAA_ID_DOMINIO_ERRATO
            - PAA_ID_INTERMEDIARIO_ERRATO
            - PAA_STAZIONE_INT_ERRATA
            - PAA_RPT_SCONOSCIUTA
            - PAA_RT_DUPLICATA
            - PAA_TIPOFIRMA_SCONOSCIUTO
            - PAA_ERRORE_FORMATO_BUSTA_FIRMATA
            - PAA_FIRMA_INDISPONIBILE
            - PAA_FIRMA_ERRATA
            - PAA_PAGAMENTO_SCONOSCIUTO
            - PAA_PAGAMENTO_DUPLICATO
            - PAA_PAGAMENTO_IN_CORSO
            - PAA_PAGAMENTO_ANNULLATO
            - PAA_PAGAMENTO_SCADUTO
            - PAA_SINTASSI_XSD
            - PAA_SINTASSI_EXTRAXSD
            - PAA_SEMANTICA
            - PAA_ATTIVA_RPT_IMPORTO_NON_VALIDO
            - PAA_SYSTEM_ERROR
            - CANALE_SINTASSI_XSD
            - CANALE_SINTASSI_EXTRAXSD
            - CANALE_SEMANTICA
            - CANALE_RPT_DUPLICATA
            - CANALE_RPT_SCONOSCIUTA
            - CANALE_RPT_RIFIUTATA
            - CANALE_RT_SCONOSCIUTA
            - CANALE_RT_NON_DISPONIBILE
            - CANALE_INDISPONIBILE
            - CANALE_RICHIEDENTE_ERRATO
            - CANALE_SYSTEM_ERROR
            - PPT_LOCAL_ERROR_PROTOCOLLO
            - PPT_LOCAL_ERROR_EXTRAXSD
            - PPT_LOCAL_ERROR_FSM
            - PPT_RT_SEGNO_DISCORDE
            - CANALE_FIRMA_SCONOSCIUTA
            - CANALE_BUSTA_ERRATA
            - CANALE_NEGA_CONTABILIZZAZIONE
            - CANALE_CARRELLO_DUPLICATO_KO
            - CANALE_CARRELLO_DUPLICATO_UNKNOWN
            - CANALE_CARRELLO_DUPLICATO_OK
            - OGGETTO_DISABILITATO
            - PPT_IBAN_NON_CENSITO
            - PPT_RT_IN_GESTIONE
            - CANALE_CONVENZIONE_NON_VALIDA
            - PAA_CONVENZIONE_NON_VALIDA
            - PPT_IMPORTO_ERRATO
            - PPT_TOKEN_SCONOSCIUTO
            - PPT_TOKEN_SCADUTO
            - PPT_POSIZIONE_SCONOSCIUTA
            - PPT_DATI_POSIZIONE_GIA_CONOSCIUTI
            - PPT_ESITO_GIA_ACQUISITO
            - PPT_PAGAMENTO_IN_CORSO
            - PPT_PAGAMENTO_DUPLICATO
            - PPT_MULTI_BENEFICIARIO
            - PPT_ERRORE
            - GENERIC_ERROR
        instance:
          type: string
          format: uri
          description: >-
            An absolute URI that identifies the specific occurrence of the
            problem.

            It may or may not yield further information if dereferenced.
      required:
        - detail
        - detail_v2
    CodiceContestoPagamento:
      description: Transaction Id used to identify the communication flow
      type: string
      minLength: 32
      maxLength: 32
    EnteBeneficiario:
      description: Beneficiary institution related to a payment
      type: object
      properties:
        identificativoUnivocoBeneficiario:
          type: string
          minLength: 1
          maxLength: 35
        denominazioneBeneficiario:
          type: string
          minLength: 1
          maxLength: 70
        codiceUnitOperBeneficiario:
          type: string
          minLength: 1
          maxLength: 35
        denomUnitOperBeneficiario:
          type: string
          minLength: 1
          maxLength: 70
        indirizzoBeneficiario:
          type: string
          minLength: 1
          maxLength: 70
        civicoBeneficiario:
          type: string
          minLength: 1
          maxLength: 16
        capBeneficiario:
          type: string
          minLength: 1
          maxLength: 16
        localitaBeneficiario:
          type: string
          minLength: 1
          maxLength: 35
        provinciaBeneficiario:
          type: string
          minLength: 1
          maxLength: 35
        nazioneBeneficiario:
          type: string
          pattern: '[A-Z]{2}'
      required:
        - identificativoUnivocoBeneficiario
        - denominazioneBeneficiario
    Iban:
      type: string
      pattern: '[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{1,30}'
    ImportoEuroCents:
      description: Amount for payments, in eurocents
      type: integer
      minimum: 0
      maximum: 99999999
    PaymentActivationsGetResponse:
      type: object
      description: >-
        Define the response to send to App to provide the payment activation
        status related to a codiceContestoPagamento
      properties:
        idPagamento:
          type: string
          minLength: 1
          maxLength: 36
      required:
        - idPagamento
    PaymentActivationsPostRequest:
      type: object
      description: Define the request received from CD App to require a payment activation
      properties:
        rptId:
          $ref: '#/components/schemas/RptId'
        importoSingoloVersamento:
          $ref: '#/components/schemas/ImportoEuroCents'
        codiceContestoPagamento:
          $ref: '#/components/schemas/CodiceContestoPagamento'
      required:
        - rptId
        - importoSingoloVersamento
        - codiceContestoPagamento
      example:
        rptId: string
        importoSingoloVersamento: 0
        codiceContestoPagamento: string
    PaymentActivationsPostResponse:
      type: object
      description: Define the response to send to CD App containing activation information
      properties:
        importoSingoloVersamento:
          $ref: '#/components/schemas/ImportoEuroCents'
        ibanAccredito:
          $ref: '#/components/schemas/Iban'
        causaleVersamento:
          type: string
          minLength: 1
          maxLength: 140
        enteBeneficiario:
          $ref: '#/components/schemas/EnteBeneficiario'
        spezzoniCausaleVersamento:
          $ref: '#/components/schemas/SpezzoniCausaleVersamento'
      required:
        - importoSingoloVersamento
    PaymentRequestsGetResponse:
      type: object
      title: PaymentRequestsGetResponse
      description: Define the response to send to CD App containing payment information
      properties:
        importoSingoloVersamento:
          $ref: '#/components/schemas/ImportoEuroCents'
        codiceContestoPagamento:
          $ref: '#/components/schemas/CodiceContestoPagamento'
        ibanAccredito:
          $ref: '#/components/schemas/Iban'
        causaleVersamento:
          type: string
          minLength: 1
          maxLength: 140
        enteBeneficiario:
          $ref: '#/components/schemas/EnteBeneficiario'
        spezzoniCausaleVersamento:
          $ref: '#/components/schemas/SpezzoniCausaleVersamento'
        dueDate:
          type: string
          pattern: ([0-9]{4})-(1[0-2]|0[1-9])-(0[1-9]|1[0-9]|2[0-9]|3[0-1])
          example: '2025-07-31'
      required:
        - importoSingoloVersamento
        - codiceContestoPagamento
    RptId:
      type: string
    SpezzoneStrutturatoCausaleVersamento:
      description: Amount related to a single element of a payment installments
      type: object
      properties:
        causaleSpezzone:
          type: string
          minLength: 1
          maxLength: 25
        importoSpezzone:
          $ref: '#/components/schemas/ImportoEuroCents'
    SpezzoniCausaleVersamento:
      description: Payment installments (optional)
      type: array
      items:
        $ref: '#/components/schemas/SpezzoniCausaleVersamentoItem'
    SpezzoniCausaleVersamentoItem:
      description: Single element of a payment installments
      type: object
      properties:
        spezzoneCausaleVersamento:
          type: string
          minLength: 1
          maxLength: 35
        spezzoneStrutturatoCausaleVersamento:
          $ref: '#/components/schemas/SpezzoneStrutturatoCausaleVersamento'
    ValidationFaultPaymentUnknown:
      type: string
      description: >
        Fault codes for errors related to well-formed requests to ECs not
        present inside Nodo, should be mapped to 404 HTTP status code.

        Most of the time these are generated when users input a wrong fiscal
        code or notice number.

        For further information visit
        https://docs.pagopa.it/gestionedeglierrori/struttura-degli-errori/fault-code.

        Possible fault codes are:

        - `PAA_PAGAMENTO_SCONOSCIUTO`
      enum:
        - PAA_PAGAMENTO_SCONOSCIUTO
    ValidationFaultPaymentUnknownProblemJson:
      required:
        - faultCodeCategory
        - faultCodeDetail
      type: object
      properties:
        title:
          type: string
          description: >
            A short, summary of the problem type. Written in english and
            readable

            for engineers (usually not suited for non technical stakeholders and

            not localized); example: Service Unavailable
        faultCodeCategory:
          type: string
          enum:
            - PAYMENT_UNKNOWN
        faultCodeDetail:
          $ref: '#/components/schemas/ValidationFaultPaymentUnknown'
      description: >
        A PaymentProblemJson-like type specific for the GetPayment operations.

        Possible values of `detail_v2` are limited to faults pertaining to
        validation errors.
    ValidationFaultPaymentUnavailable:
      type: string
      description: >
        Fault codes for errors related to well-formed requests to ECs not
        present inside Nodo, should be mapped to 404 HTTP status code.

        Most of the time these are generated when users input a wrong fiscal
        code or notice number.

        For further information visit
        https://docs.pagopa.it/gestionedeglierrori/struttura-degli-errori/fault-code.

        Possible fault codes are:

        - `PPT_PSP_SCONOSCIUTO`

        - `PPT_PSP_DISABILITATO`

        - `PPT_INTERMEDIARIO_PSP_SCONOSCIUTO`

        - `PPT_INTERMEDIARIO_PSP_DISABILITATO`

        - `PPT_CANALE_SCONOSCIUTO`

        - `PPT_CANALE_DISABILITATO`

        - `PPT_AUTENTICAZIONE`

        - `PPT_AUTORIZZAZIONE`

        - `PPT_DOMINIO_DISABILITATO`

        - `PPT_INTERMEDIARIO_PA_DISABILITATO`

        - `PPT_STAZIONE_INT_PA_DISABILITATA`

        - `PPT_CODIFICA_PSP_SCONOSCIUTA`

        - `PPT_SEMANTICA`

        - `PPT_SYSTEM_ERROR`

        - `PAA_SEMANTICA`
      enum:
        - PPT_PSP_SCONOSCIUTO
        - PPT_PSP_DISABILITATO
        - PPT_INTERMEDIARIO_PSP_SCONOSCIUTO
        - PPT_INTERMEDIARIO_PSP_DISABILITATO
        - PPT_CANALE_SCONOSCIUTO
        - PPT_CANALE_DISABILITATO
        - PPT_AUTENTICAZIONE
        - PPT_AUTORIZZAZIONE
        - PPT_DOMINIO_DISABILITATO
        - PPT_INTERMEDIARIO_PA_DISABILITATO
        - PPT_STAZIONE_INT_PA_DISABILITATA
        - PPT_CODIFICA_PSP_SCONOSCIUTA
        - PPT_SEMANTICA
        - PPT_SYSTEM_ERROR
        - PAA_SEMANTICA
    ValidationFaultPaymentUnavailableProblemJson:
      required:
        - faultCodeCategory
        - faultCodeDetail
      type: object
      properties:
        title:
          type: string
          description: >
            A short, summary of the problem type. Written in english and
            readable

            for engineers (usually not suited for non technical stakeholders and

            not localized); example: Service Unavailable
        faultCodeCategory:
          type: string
          enum:
            - PAYMENT_UNAVAILABLE
        faultCodeDetail:
          $ref: '#/components/schemas/ValidationFaultPaymentUnavailable'
      description: >
        A PaymentProblemJson-like type specific for the GetPayment operations.

        Possible values of `detail_v2` are limited to faults pertaining to
        validation errors.
    ValidationFaultPaymentDataErrorProblemJson:
      required:
        - faultCodeCategory
        - faultCodeDetail
      type: object
      properties:
        title:
          type: string
          description: >
            A short, summary of the problem type. Written in english and
            readable

            for engineers (usually not suited for non technical stakeholders and

            not localized); example: Service Unavailable
        faultCodeCategory:
          type: string
          enum:
            - PAYMENT_DATA_ERROR
        faultCodeDetail:
          $ref: '#/components/schemas/ValidationFaultPaymentDataError'
      description: >
        A PaymentProblemJson-like type specific for the GetPayment operations.

        Possible values of `detail_v2` are limited to faults pertaining to
        validation errors.
    ValidationFaultPaymentDataError:
      type: string
      description: >
        Fault codes for errors related to well-formed requests to ECs not
        present inside Nodo, should be mapped to 404 HTTP status code.

        Most of the time these are generated when users input a wrong fiscal
        code or notice number.

        For further information visit
        https://docs.pagopa.it/gestionedeglierrori/struttura-degli-errori/fault-code.

        Possible fault codes are:

        - `PPT_SINTASSI_EXTRAXSD`

        - `PPT_SINTASSI_XSD`

        - `PPT_DOMINIO_SCONOSCIUTO`

        - `PPT_STAZIONE_INT_PA_SCONOSCIUTA`
      enum:
        - PPT_SINTASSI_EXTRAXSD
        - PPT_SINTASSI_XSD
        - PPT_DOMINIO_SCONOSCIUTO
        - PPT_STAZIONE_INT_PA_SCONOSCIUTA
    GatewayFaultPaymentProblemJson:
      required:
        - faultCodeCategory
        - faultCodeDetail
      type: object
      properties:
        title:
          type: string
          description: >
            A short, summary of the problem type. Written in english and
            readable

            for engineers (usually not suited for non technical stakeholders and

            not localized); example: Service Unavailable
        faultCodeCategory:
          type: string
          enum:
            - GENERIC_ERROR
        faultCodeDetail:
          $ref: '#/components/schemas/GatewayFault'
      description: >
        A PaymentProblemJson-like type specific for the GetPayment and
        ActivatePayment operations.

        Possible values of `detail_v2` are limited to faults pertaining to Nodo
        errors.
    GatewayFault:
      type: string
      description: >
        Fault codes for generic downstream services errors, should be mapped to
        502 HTTP status code.

        For further information visit
        https://docs.pagopa.it/gestionedeglierrori/struttura-degli-errori/fault-code.
    PartyConfigurationFault:
      type: string
      description: >
        Fault codes for fatal errors from ECs, should be mapped to 503 HTTP
        status code.

        For further information visit
        https://docs.pagopa.it/gestionedeglierrori/struttura-degli-errori/fault-code.

        Possible fault codes are:

        - `PPT_STAZIONE_INT_PA_IRRAGGIUNGIBILE`

        - `PPT_STAZIONE_INT_PA_TIMEOUT`

        - `PPT_STAZIONE_INT_PA_ERRORE_RESPONSE`

        - `PPT_IBAN_NON_CENSITO`

        - `PAA_SINTASSI_EXTRAXSD`

        - `PAA_SINTASSI_XSD`

        - `PAA_ID_DOMINIO_ERRATO`

        - `PAA_ID_INTERMEDIARIO_ERRATO`

        - `PAA_STAZIONE_INT_ERRATA`

        - `PAA_ATTIVA_RPT_IMPORTO_NON_VALIDO`

        - `PPT_ERRORE_EMESSO_DA_PAA`

        - `PAA_SYSTEM_ERROR`
      enum:
        - PPT_STAZIONE_INT_PA_IRRAGGIUNGIBILE
        - PPT_STAZIONE_INT_PA_TIMEOUT
        - PPT_STAZIONE_INT_PA_ERRORE_RESPONSE
        - PPT_IBAN_NON_CENSITO
        - PAA_SINTASSI_EXTRAXSD
        - PAA_SINTASSI_XSD
        - PAA_ID_DOMINIO_ERRATO
        - PAA_ID_INTERMEDIARIO_ERRATO
        - PAA_STAZIONE_INT_ERRATA
        - PAA_ATTIVA_RPT_IMPORTO_NON_VALIDO
        - PPT_ERRORE_EMESSO_DA_PAA
        - PAA_SYSTEM_ERROR
    PaymentOngoingStatusFault:
      type: string
      description: >
        Fault codes for errors related to payment attempts that cause conflict
        with the current payment status,

        such as a duplicated payment attempt or a payment attempt made while
        another attempt is still being processed.

        Should be mapped to 409 HTTP status code.

        For further information visit
        https://docs.pagopa.it/gestionedeglierrori/struttura-degli-errori/fault-code.

        Possible fault codes are:

        - `PPT_PAGAMENTO_IN_CORSO`

        - `PAA_PAGAMENTO_IN_CORSO`
      enum:
        - PPT_PAGAMENTO_IN_CORSO
        - PAA_PAGAMENTO_IN_CORSO
    PaymentOngoingStatusFaultPaymentProblemJson:
      required:
        - faultCodeCategory
        - faultCodeDetail
      type: object
      properties:
        title:
          type: string
          description: >
            A short, summary of the problem type. Written in english and
            readable

            for engineers (usually not suited for non technical stakeholders and

            not localized); example: Service Unavailable
        faultCodeCategory:
          type: string
          enum:
            - PAYMENT_ONGOING
        faultCodeDetail:
          $ref: '#/components/schemas/PaymentOngoingStatusFault'
      description: >
        A PaymentProblemJson-like type specific for the GetPayment and
        ActivatePayment operations.

        Possible values of `detail_v2` are limited to faults pertaining to Nodo
        errors related to payment status conflicts.
    PaymentExpiredStatusFaultPaymentProblemJson:
      required:
        - faultCodeCategory
        - faultCodeDetail
      type: object
      properties:
        title:
          type: string
          description: >
            A short, summary of the problem type. Written in english and
            readable

            for engineers (usually not suited for non technical stakeholders and

            not localized); example: Service Unavailable
        faultCodeCategory:
          type: string
          enum:
            - PAYMENT_EXPIRED
        faultCodeDetail:
          $ref: '#/components/schemas/PaymentExpiredStatusFault'
      description: >
        A PaymentProblemJson-like type specific for the GetPayment and
        ActivatePayment operations.

        Possible values of `detail_v2` are limited to faults pertaining to Nodo
        errors related to payment status conflicts.
    PaymentExpiredStatusFault:
      type: string
      description: >
        Fault codes for errors related to payment attempts that cause conflict
        with the current payment status,

        such as a duplicated payment attempt or a payment attempt made while
        another attempt is still being processed.

        Should be mapped to 409 HTTP status code.

        For further information visit
        https://docs.pagopa.it/gestionedeglierrori/struttura-degli-errori/fault-code.

        Possible fault codes are:

        - `PAA_PAGAMENTO_SCADUTO`
      enum:
        - PAA_PAGAMENTO_SCADUTO
    PaymentCanceledStatusFaultPaymentProblemJson:
      required:
        - faultCodeCategory
        - faultCodeDetail
      type: object
      properties:
        title:
          type: string
          description: >
            A short, summary of the problem type. Written in english and
            readable

            for engineers (usually not suited for non technical stakeholders and

            not localized); example: Service Unavailable
        faultCodeCategory:
          type: string
          enum:
            - PAYMENT_CANCELED
        faultCodeDetail:
          $ref: '#/components/schemas/PaymentCanceledStatusFault'
      description: >
        A PaymentProblemJson-like type specific for the GetPayment and
        ActivatePayment operations.

        Possible values of `detail_v2` are limited to faults pertaining to Nodo
        errors related to payment status conflicts.
    PaymentCanceledStatusFault:
      type: string
      description: >
        Fault codes for errors related to payment attempts that cause conflict
        with the current payment status,

        such as a duplicated payment attempt or a payment attempt made while
        another attempt is still being processed.

        Should be mapped to 409 HTTP status code.

        For further information visit
        https://docs.pagopa.it/gestionedeglierrori/struttura-degli-errori/fault-code.

        Possible fault codes are:

        - `PAA_PAGAMENTO_ANNULLATO`
      enum:
        - PAA_PAGAMENTO_ANNULLATO
    PaymentDuplicatedStatusFaultPaymentProblemJson:
      required:
        - faultCodeCategory
        - faultCodeDetail
      type: object
      properties:
        title:
          type: string
          description: >
            A short, summary of the problem type. Written in english and
            readable

            for engineers (usually not suited for non technical stakeholders and

            not localized); example: Service Unavailable
        faultCodeCategory:
          type: string
          enum:
            - PAYMENT_DUPLICATED
        faultCodeDetail:
          $ref: '#/components/schemas/PaymentDuplicatedStatusFault'
      description: >
        A PaymentProblemJson-like type specific for the GetPayment and
        ActivatePayment operations.

        Possible values of `detail_v2` are limited to faults pertaining to Nodo
        errors related to payment status conflicts.
    PaymentDuplicatedStatusFault:
      type: string
      description: >
        Fault codes for errors related to payment attempts that cause conflict
        with the current payment status,

        such as a duplicated payment attempt or a payment attempt made while
        another attempt is still being processed.

        Should be mapped to 409 HTTP status code.

        For further information visit
        https://docs.pagopa.it/gestionedeglierrori/struttura-degli-errori/fault-code.

        Possible fault codes are:

        - `PAA_PAGAMENTO_DUPLICATO`

        - `PPT_PAGAMENTO_DUPLICATO`
      enum:
        - PAA_PAGAMENTO_DUPLICATO
        - PPT_PAGAMENTO_DUPLICATO
    PaymentInfoResponse:
      title: PaymentRequestsGetResponse
      required:
        - amount
      type: object
      properties:
        rptId:
          pattern: ([a-zA-Z\d]{1,35})|(RF\d{2}[a-zA-Z\d]{1,21})
          type: string
          description: Digital payment request id
        paFiscalCode:
          maxLength: 11
          minLength: 11
          type: string
          description: Fiscal code associated to the payment notice
        paName:
          maxLength: 140
          minLength: 1
          type: string
          description: Name of the payment notice issuer
        description:
          maxLength: 140
          minLength: 1
          type: string
          description: Payment notice description
        amount:
          maximum: 99999999
          minimum: 0
          type: integer
          description: Payment notice amount
        dueDate:
          pattern: ([0-9]{4})-(1[0-2]|0[1-9])-(0[1-9]|1[0-9]|2[0-9]|3[0-1])
          type: string
          description: Payment notice due date
          example: '2025-07-31'
      description: Response with payment request information
    PaymentInfoNotFoundResponse:
      allOf:
        - $ref: '#/components/schemas/ValidationFaultPaymentDataErrorProblemJson'
        - $ref: '#/components/schemas/ValidationFaultPaymentUnknownProblemJson'
      x-one-of: true
    PaymentInfoConflictResponse:
      allOf:
        - $ref: '#/components/schemas/PaymentOngoingStatusFaultPaymentProblemJson'
        - $ref: '#/components/schemas/PaymentExpiredStatusFaultPaymentProblemJson'
        - $ref: '#/components/schemas/PaymentCanceledStatusFaultPaymentProblemJson'
        - $ref: '#/components/schemas/PaymentDuplicatedStatusFaultPaymentProblemJson'
      x-one-of: true
    PaymentInfoBadGatewayResponse:
      allOf:
        - $ref: '#/components/schemas/GatewayFaultPaymentProblemJson'
        - $ref: '#/components/schemas/ValidationFaultPaymentUnavailableProblemJson'
      x-one-of: true
    PaymentInfoUnavailableResponse:
      required:
        - faultCodeCategory
        - faultCodeDetail
      type: object
      properties:
        title:
          type: string
          description: >
            A short, summary of the problem type. Written in english and
            readable

            for engineers (usually not suited for non technical stakeholders and

            not localized); example: Service Unavailable
        faultCodeCategory:
          type: string
          enum:
            - DOMAIN_UNKNOWN
        faultCodeDetail:
          $ref: '#/components/schemas/PartyConfigurationFault'
      description: A PaymentProblemJson-like type specific for the GetPayment
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
