openapi: 3.0.1
info:
  title: Carta Giovani Nazionale API
  version: 16.12.1
servers:
  - url: https://localhost/api/v1/cgn
security:
  - Bearer: []
paths:
  /status:
    get:
      summary: Get the CGN status details
      description: |
        Get the CGN status details 
        by the provided fiscal code
      operationId: getCgnStatus
      responses:
        '200':
          description: CGN status details.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Card'
        '401':
          description: Bearer token null or expired.
          content: {}
        '403':
          description: Forbidden.
          content: {}
        '404':
          description: No CGN found.
          content: {}
        '500':
          description: Service unavailable.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemJson'
  /activation:
    get:
      summary: |
        Get CGN activation process status
      description: |
        Get informations about a CGN activation process
      operationId: getCgnActivation
      responses:
        '200':
          description: Cgn activation details.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CgnActivationDetail'
        '401':
          description: Bearer token null or expired.
          content: {}
        '403':
          description: Forbidden.
          content: {}
        '404':
          description: No CGN activation process found.
          content: {}
        '500':
          description: Service unavailable.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemJson'
    post:
      summary: Start a CGN activation procedure
      description: |
        Start a new CGN activation procedure
        for the logged user calculating if the user is
        eligible to get a CGN.
      operationId: startCgnActivation
      responses:
        '201':
          description: Request created.
          headers:
            Location:
              description: >-
                Location (URL) of created request resource.

                A GET request to this URL returns the request status and
                details.
              schema:
                type: string
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InstanceId'
        '202':
          description: Processing request.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InstanceId'
        '401':
          description: Bearer token null or expired.
          content: {}
        '403':
          description: >
            Cannot activate a new CGN because the user is ineligible to get the
            CGN.
          content: {}
        '409':
          description: >
            Cannot activate the user's cgn because another updateCgn request was
            found

            for this user or it is already active.
          content: {}
        '500':
          description: Service unavailable.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemJson'
  /eyca/activation:
    get:
      summary: |
        Get EYCA activation process' status
      description: |
        Get informations about an EYCA activation process
      operationId: getEycaActivation
      responses:
        '200':
          description: Eyca Card activation details.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EycaActivationDetail'
        '401':
          description: Wrong or missing function key.
          content: {}
        '403':
          description: Forbidden.
          content: {}
        '404':
          description: No EYCA Card activation process found.
          content: {}
        '500':
          description: Service unavailable.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemJson'
    post:
      summary: Start an EYCA activation procedure
      description: |
        Start a new EYCA activation procedure
        for the logged user calculating if the user is
        eligible to enable EYCA on his CGN card.
      operationId: startEycaActivation
      responses:
        '201':
          description: Request created.
          headers:
            Location:
              description: >-
                Location (URL) of created request resource.

                A GET request to this URL returns the request status and
                details.
              schema:
                type: string
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InstanceId'
        '202':
          description: Processing request.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InstanceId'
        '401':
          description: Bearer token null or expired.
          content: {}
        '403':
          description: >
            Cannot activate EYCA Card because the user is ineligible to enable
            EYCA.
          content: {}
        '409':
          description: >
            Cannot activate EYCA Card because another EYCA Card activation
            request was found

            for this user or it is already active.
          content: {}
        '500':
          description: Service unavailable.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemJson'
  /eyca/status:
    get:
      summary: Get the Eyca Card status details
      description: |
        Get the Eyca Card status details
      operationId: getEycaStatus
      responses:
        '200':
          description: Eyca Card status details.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EycaCard'
        '401':
          description: Bearer token null or expired.
          content: {}
        '403':
          description: Forbidden.
          content: {}
        '404':
          description: No Eyca Card found.
          content: {}
        '409':
          description: Conflict.
          content: {}
        '500':
          description: Service unavailable.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemJson'
  /delete:
    post:
      summary: Start a CGN unsubscription procedure
      description: |
        Start a new CGN unsubscription procedure
        for the logged user
      operationId: startCgnUnsubscription
      responses:
        '201':
          description: Request created.
          headers:
            Location:
              description: >
                Location (URL) of created request resource

                This location actually points to a not existing api, but
                semantically 201

                means that the request has been taken in charge
              schema:
                type: string
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InstanceId'
        '202':
          description: Processing request.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InstanceId'
        '401':
          description: Bearer token null or expired.
          content: {}
        '403':
          description: |
            Cannot unsubscribe because the user is ineligible to get the CGN
          content: {}
        '409':
          description: >
            Cannot unsubscribe the user's cgn because another updateCgn request
            was found

            for this user
          content: {}
        '500':
          description: Service unavailable.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemJson'
  /otp:
    post:
      summary: |
        Generate a new Otp related to a CGN
      description: |
        Generate a new Otp used to discount an online purchase
        through a valid CGN
      operationId: generateOtp
      responses:
        '200':
          description: Otp generated.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Otp'
        '401':
          description: Bearer token null or expired.
          content: {}
        '403':
          description: Forbidden.
          content: {}
        '500':
          description: Service unavailable.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemJson'
  /operator-search/published-product-categories:
    get:
      summary: List of published product categories
      description: |
        List of categories that have at least a published discount
      operationId: getPublishedProductCategories
      parameters:
        - name: count_new_discounts
          in: query
          description: >-
            Indicates whether categories should be enriched with new discounts
            count.
          schema:
            type: boolean
      responses:
        '200':
          description: List of categories that have at least a published discount
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PublishedProductCategoriesResult'
        '401':
          description: Login expired.
          content: {}
        '500':
          description: Service unavailable.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemJson'
  /operator-search/count:
    get:
      summary: Count merchants and discounts to search within
      description: |
        Count merchants and discountsto search within
      operationId: count
      responses:
        '200':
          description: Count of merchants/discounts
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CountResult'
        '400':
          description: Bad request.
          content: {}
        '401':
          description: Login expired.
          content: {}
        '500':
          description: Service unavailable.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemJson'
  /operator-search/search:
    post:
      summary: Search merchants or discounts
      description: >
        List of merchants and discounts with the token in name and/or
        description
      operationId: search
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/SearchRequest'
        required: false
      responses:
        '200':
          description: List of merchants/discounts for the given query parameters
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SearchResult'
        '400':
          description: Bad request.
          content: {}
        '401':
          description: Login expired.
          content: {}
        '500':
          description: Service unavailable.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemJson'
      x-codegen-request-body-name: body
  /operator-search/online-merchants:
    post:
      summary: List of online merchants
      description: |
        List of online merchants alphabetically ordered
      operationId: getOnlineMerchants
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/OnlineMerchantSearchRequest'
        required: false
      responses:
        '200':
          description: List of online merchants for the given query parameters
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OnlineMerchants'
        '401':
          description: Login expired.
          content: {}
        '500':
          description: Service unavailable.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemJson'
      x-codegen-request-body-name: body
  /operator-search/offline-merchants:
    post:
      summary: List of merchants with a physical address
      description: >
        List of merchants with physical address, ordered by distance from the
        user by default
      operationId: getOfflineMerchants
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/OfflineMerchantSearchRequest'
        required: false
      responses:
        '200':
          description: List of physical merchants for the given query parameters
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OfflineMerchants'
        '401':
          description: Login expired.
          content: {}
        '500':
          description: Service unavailable.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemJson'
      x-codegen-request-body-name: body
  /operator-search/merchants/{merchantId}:
    get:
      summary: Retrieve merchant details
      description: |
        Retrieve merchant details together with published discounts
      operationId: getMerchant
      parameters:
        - name: merchantId
          in: path
          description: Merchant Identifier
          required: true
          schema:
            minLength: 1
            type: string
      responses:
        '200':
          description: Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Merchant'
        '401':
          description: Login expired.
          content: {}
        '404':
          description: Operator Not Found
          content: {}
        '500':
          description: Service unavailable.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemJson'
  /operator-search/discount-bucket-code/{discountId}:
    get:
      summary: Retrieve a discount bucket code
      description: |
        Retrieve a discount bucket code and burns it
      operationId: getDiscountBucketCode
      parameters:
        - name: discountId
          in: path
          description: Discount Identifier
          required: true
          schema:
            minLength: 1
            type: string
      responses:
        '200':
          description: Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DiscountBucketCode'
        '401':
          description: Login expired.
          content: {}
        '403':
          description: Access data provided are invalid or CGN not valid
          content: {}
        '404':
          description: Bucket code Not Found
          content: {}
        '410':
          description: Endpoint no longer available
          content: {}
        '500':
          description: Service unavailable.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProblemJson'
components:
  schemas:
    Merchant:
      type: object
      required:
        - id
        - name
        - discounts
        - allNationalAddresses
      properties:
        id:
          type: string
          minLength: 1
        name:
          type: string
          minLength: 1
        fullName:
          type: string
          minLength: 1
        description:
          type: string
          minLength: 1
        websiteUrl:
          type: string
          minLength: 1
        supportType:
          $ref: '#/components/schemas/SupportType'
        supportValue:
          type: string
          minLength: 1
          default: '-'
        discountCodeType:
          $ref: '#/components/schemas/DiscountCodeType'
        imageUrl:
          type: string
          minLength: 1
        discounts:
          type: array
          items:
            $ref: '#/components/schemas/Discount'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        allNationalAddresses:
          type: boolean
    SupportType:
      type: string
      default: EMAILADDRESS
      enum:
        - WEBSITE
        - PHONENUMBER
        - EMAILADDRESS
    DiscountCodeType:
      type: string
      enum:
        - static
        - api
        - landingpage
        - bucket
    OfflineMerchants:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/OfflineMerchant'
    OfflineMerchant:
      type: object
      required:
        - id
        - name
        - productCategories
        - address
        - newDiscounts
      properties:
        id:
          type: string
          minLength: 1
        name:
          type: string
          minLength: 1
        productCategories:
          type: array
          items:
            $ref: '#/components/schemas/ProductCategory'
        address:
          $ref: '#/components/schemas/Address'
        distance:
          description: Distance in meters
          type: integer
          minimum: 0
        newDiscounts:
          type: boolean
        numberOfNewDiscounts:
          type: number
    OfflineMerchantSearchRequest:
      type: object
      properties:
        merchantName:
          type: string
          description: Text used for searching merchants by their name
          minLength: 1
        productCategories:
          type: array
          description: List of product categories to filter the results
          items:
            $ref: '#/components/schemas/ProductCategory'
        page:
          type: integer
          description: page of result
          default: 0
          minimum: 0
        pageSize:
          type: integer
          description: elements per page
          default: 200
          minimum: 1
        userCoordinates:
          $ref: '#/components/schemas/Coordinates'
          description: User coordinates
        boundingBox:
          $ref: '#/components/schemas/BoundingBox'
          description: search area bounding box
        ordering:
          type: string
          enum:
            - distance
            - alphabetic
          default: distance
          description: Ordering type, by distance or alphabetical
    CountResult:
      type: object
      required:
        - count
      properties:
        count:
          type: number
    SearchResult:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/SearchItem'
    SearchItem:
      type: object
      required:
        - id
        - name
        - description
        - newDiscounts
      properties:
        id:
          type: string
          minLength: 1
        name:
          type: string
          minLength: 1
        description:
          type: string
          minLength: 1
        newDiscounts:
          type: boolean
    OnlineMerchants:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/OnlineMerchant'
    OnlineMerchant:
      type: object
      required:
        - id
        - name
        - productCategories
        - websiteUrl
        - discountCodeType
        - newDiscounts
      properties:
        id:
          type: string
          minLength: 1
        name:
          type: string
          minLength: 1
        productCategories:
          type: array
          items:
            $ref: '#/components/schemas/ProductCategory'
        websiteUrl:
          type: string
          minLength: 1
        discountCodeType:
          $ref: '#/components/schemas/DiscountCodeType'
        newDiscounts:
          type: boolean
        numberOfNewDiscounts:
          type: number
    SearchRequest:
      type: object
      properties:
        token:
          type: string
          description: >-
            Text used for searching merchants/discounts by their name and
            description
          minLength: 3
        page:
          type: integer
          description: page of result
          default: 0
          minimum: 0
        pageSize:
          type: integer
          description: elements per page
          default: 200
          minimum: 1
    OnlineMerchantSearchRequest:
      type: object
      properties:
        merchantName:
          type: string
          description: Text used for searching merchants by their name
          minLength: 1
        productCategories:
          type: array
          description: List of product categories to filter the results
          items:
            $ref: '#/components/schemas/ProductCategory'
        page:
          type: integer
          description: page of result
          default: 0
          minimum: 0
        pageSize:
          type: integer
          description: elements per page
          default: 200
          minimum: 1
    Discount:
      type: object
      required:
        - id
        - name
        - startDate
        - endDate
        - productCategories
      properties:
        id:
          type: string
          minLength: 1
        name:
          type: string
          minLength: 1
        description:
          type: string
          minLength: 1
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        productCategories:
          type: array
          items:
            $ref: '#/components/schemas/ProductCategory'
        discount:
          type: number
          format: double
          minimum: 1
        condition:
          type: string
          minLength: 1
        staticCode:
          type: string
          minLength: 1
        landingPageUrl:
          type: string
          minLength: 1
        landingPageReferrer:
          type: string
          minLength: 1
        discountUrl:
          type: string
          minLength: 1
          maxLength: 500
        isNew:
          type: boolean
    ProductCategory:
      type: string
      enum:
        - bankingServices
        - cultureAndEntertainment
        - health
        - home
        - jobOffers
        - learning
        - sports
        - sustainableMobility
        - telephonyAndInternet
        - travelling
    Address:
      type: object
      required:
        - full_address
      properties:
        full_address:
          type: string
          minLength: 1
        latitude:
          type: number
        longitude:
          type: number
    Coordinates:
      type: object
      required:
        - latitude
        - longitude
      properties:
        latitude:
          type: number
        longitude:
          type: number
    BoundingBox:
      type: object
      required:
        - coordinates
        - deltaLatitude
        - deltaLongitude
      properties:
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        deltaLatitude:
          type: number
          description: Bounding box delta latitude
        deltaLongitude:
          type: number
          description: Bounding box delta longitude
    DiscountBucketCode:
      type: object
      required:
        - code
      properties:
        code:
          type: string
    PublishedProductCategories:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ProductCategory'
    PublishedProductCategoriesWithNewDiscountsCount:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ProductCategoryWithNewDiscountsCount'
    PublishedProductCategoriesResult:
      x-one-of: true
      allOf:
        - $ref: '#/components/schemas/PublishedProductCategoriesWithNewDiscountsCount'
        - $ref: '#/components/schemas/PublishedProductCategories'
    ProductCategoryWithNewDiscountsCount:
      type: object
      properties:
        productCategory:
          $ref: '#/components/schemas/ProductCategory'
        newDiscounts:
          type: number
      required:
        - productCategory
        - newDiscounts
    InstanceId:
      type: object
      properties:
        id:
          type: string
          minLength: 1
          description: The identifier of the created request.
      required:
        - id
    CommonCard:
      type: object
      properties:
        activation_date:
          $ref: '#/components/schemas/Timestamp'
        expiration_date:
          $ref: '#/components/schemas/Timestamp'
      required:
        - activation_date
        - expiration_date
    CardPending:
      type: object
      properties:
        status:
          type: string
          x-extensible-enum:
            - PENDING
      required:
        - status
    CardPendingDelete:
      allOf:
        - $ref: '#/components/schemas/CommonCard'
        - type: object
          properties:
            status:
              type: string
              x-extensible-enum:
                - PENDING_DELETE
          required:
            - status
    CardActivated:
      allOf:
        - $ref: '#/components/schemas/CommonCard'
        - type: object
          properties:
            status:
              type: string
              x-extensible-enum:
                - ACTIVATED
          required:
            - status
    CardRevoked:
      allOf:
        - $ref: '#/components/schemas/CommonCard'
        - type: object
          properties:
            status:
              type: string
              x-extensible-enum:
                - REVOKED
            revocation_date:
              $ref: '#/components/schemas/Timestamp'
            revocation_reason:
              type: string
              minLength: 1
          required:
            - status
            - revocation_date
            - revocation_reason
    CardExpired:
      allOf:
        - $ref: '#/components/schemas/CommonCard'
        - type: object
          properties:
            status:
              type: string
              x-extensible-enum:
                - EXPIRED
          required:
            - status
    Card:
      x-one-of: true
      allOf:
        - $ref: '#/components/schemas/CardPending'
        - $ref: '#/components/schemas/CardPendingDelete'
        - $ref: '#/components/schemas/CardActivated'
        - $ref: '#/components/schemas/CardRevoked'
        - $ref: '#/components/schemas/CardExpired'
      x-example:
        status: ACTIVATED
        activation_date: '2021-10-13T00:00:00.000Z'
        expiration_date: '2030-10-13T00:00:00.000Z'
    CgnActivationDetail:
      type: object
      properties:
        instance_id:
          $ref: '#/components/schemas/InstanceId'
        status:
          type: string
          x-extensible-enum:
            - PENDING
            - RUNNING
            - COMPLETED
            - ERROR
            - UNKNOWN
        created_at:
          $ref: '#/components/schemas/Timestamp'
        last_updated_at:
          $ref: '#/components/schemas/Timestamp'
      required:
        - instance_id
        - status
    EycaActivationDetail:
      type: object
      properties:
        status:
          type: string
          x-extensible-enum:
            - PENDING
            - RUNNING
            - COMPLETED
            - ERROR
            - UNKNOWN
        created_at:
          $ref: '#/components/schemas/Timestamp'
        last_updated_at:
          $ref: '#/components/schemas/Timestamp'
      required:
        - status
    EycaCard:
      x-one-of: true
      allOf:
        - $ref: '#/components/schemas/CardPending'
        - $ref: '#/components/schemas/EycaCardPendingDelete'
        - $ref: '#/components/schemas/EycaCardActivated'
        - $ref: '#/components/schemas/EycaCardRevoked'
        - $ref: '#/components/schemas/EycaCardExpired'
      x-example:
        status: ACTIVATED
        activation_date: '2021-10-13T00:00:00.000Z'
        expiration_date: '2030-10-13T00:00:00.000Z'
    EycaCardActivated:
      allOf:
        - $ref: '#/components/schemas/CardActivated'
        - type: object
          properties:
            card_number:
              $ref: '#/components/schemas/CcdbNumber'
          required:
            - card_number
    EycaCardExpired:
      allOf:
        - $ref: '#/components/schemas/CardExpired'
        - type: object
          properties:
            card_number:
              $ref: '#/components/schemas/CcdbNumber'
          required:
            - card_number
    EycaCardRevoked:
      allOf:
        - $ref: '#/components/schemas/CardRevoked'
        - type: object
          properties:
            card_number:
              $ref: '#/components/schemas/CcdbNumber'
          required:
            - card_number
    EycaCardPendingDelete:
      allOf:
        - $ref: '#/components/schemas/CardPendingDelete'
        - type: object
          properties:
            card_number:
              $ref: '#/components/schemas/CcdbNumber'
          required:
            - card_number
    CcdbNumber:
      type: string
      description: The internal CCDB Card number
      pattern: ^[A-Z][0-9]{3}-[A-Z][0-9]{3}-[A-Z][0-9]{3}-[A-Z][0-9]{3}$
      minLength: 1
    Otp:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/OtpCode'
        expires_at:
          $ref: '#/components/schemas/Timestamp'
        ttl:
          type: number
      required:
        - code
        - expires_at
        - ttl
    OtpCode:
      description: The unique otp code that can be use for discounts
      type: string
      pattern: ^[A-Z0-9]{9,13}$
    ProblemJson:
      type: object
      properties:
        type:
          type: string
          format: uri
          description: |-
            An absolute URI that identifies the problem type. When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          default: about:blank
          example: https://example.com/problem/constraint-violation
        title:
          type: string
          description: >-
            A short, summary of the problem type. Written in english and
            readable

            for engineers (usually not suited for non technical stakeholders and

            not localized); example: Service Unavailable
        status:
          type: integer
          format: int32
          description: >-
            The HTTP status code generated by the origin server for this
            occurrence

            of the problem.
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
          example: 200
        detail:
          type: string
          description: |-
            A human readable explanation specific to this occurrence of the
            problem.
          example: There was an error processing the request
        instance:
          type: string
          format: uri
          description: >-
            An absolute URI that identifies the specific occurrence of the
            problem.

            It may or may not yield further information if dereferenced.
    Timestamp:
      type: string
      format: UTCISODateFromString
      description: A date-time field in ISO-8601 format and UTC timezone.
      x-import: '@pagopa/ts-commons/lib/dates'
      example: '2018-10-13T00:00:00.000Z'
    FiscalCode:
      type: string
      description: User's fiscal code.
      format: FiscalCode
      x-import: '@pagopa/ts-commons/lib/strings'
      example: SPNDNL80R13C555X
  parameters:
    CountNewDiscounts:
      name: count_new_discounts
      in: query
      description: >-
        Indicates whether categories should be enriched with new discounts
        count.
      schema:
        type: boolean
  securitySchemes:
    Bearer:
      type: apiKey
      name: Authorization
      in: header
