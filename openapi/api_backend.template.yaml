openapi: 3.0.1
info:
  title: Proxy API
  description: Mobile and web proxy API gateway.
  version: 16.7.0
servers:
  - url: https://api-app.io.pagopa.it/api/v1
security:
  - Bearer: []
paths:
  /services/{service_id}/preferences:
    get:
      summary: GetServicePreferences
      operationId: getServicePreferences
      parameters:
        - name: service_id
          in: path
          description: The ID of an existing Service.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Service Preference found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServicePreference"
              example:
                can_access_message_read_status: true
                is_inbox_enabled: true
                is_email_enabled: false
                is_webhook_enabled: true
                settings_version: 1
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: No service found for the provided ID.
          content: {}
        "409":
          description: Conflict. The Profile is not in the correct preference mode.
          content: {}
        "429":
          description: Too many requests
          content: {}
        "500":
          description: Internal Server Error
          content: {}
    post:
      summary: UpsertServicePreferences
      operationId: upsertServicePreferences
      parameters:
        - name: service_id
          in: path
          description: The ID of an existing Service.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpsertServicePreference"
        required: false
      responses:
        "200":
          description: Service Preference found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServicePreference"
              example:
                can_access_message_read_status: true
                is_inbox_enabled: true
                is_email_enabled: false
                is_webhook_enabled: true
                settings_version: 1
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: No service found for the provided ID.
          content: {}
        "409":
          description: |-
            Conflict. Either the provided preference setting version is not consistent with the current version stored in the Profile
            or the Profile is not in the correct preference mode.
          content: {}
        "429":
          description: Too many requests
          content: {}
        "500":
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: body
  /profile:
    get:
      summary: Get user's profile
      description:
        Returns the profile for the user identified by the provided fiscal
        code.
      operationId: getUserProfile
      responses:
        "200":
          description: Found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InitializedProfile"
              example:
                email: email@example.com
                family_name: Rossi
                fiscal_code: TMMEXQ60A10Y526X
                has_profile: true
                is_email_set: true
                is_inbox_enabled: true
                is_webhook_enabled: true
                is_email_validated: true
                is_email_already_taken: false
                name: Mario
                spid_email: preferred@example.com
                service_preferences_settings:
                  - mode: LEGACY
                version: 1
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
        "401":
          description: Bearer token null or expired.
          content: {}
        "429":
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
        "500":
          description: There was an error in retrieving the user profile.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
    post:
      summary: Update the User's profile
      description:
        Update the profile for the user identified by the provided fiscal
        code.
      operationId: updateProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Profile"
        required: true
      responses:
        "200":
          description: Profile updated.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InitializedProfile"
              example:
                email: email@example.com
                family_name: Rossi
                fiscal_code: TMMEXQ60A10Y526X
                has_profile: true
                is_email_set: true
                is_inbox_enabled: true
                is_webhook_enabled: true
                is_email_validated: true
                is_email_already_taken: false
                name: Mario
                spid_email: preferred@example.com
                version: 0
        "400":
          description: Invalid payload.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
        "401":
          description: Bearer token null or expired.
          content: {}
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
        "409":
          description: Conflict.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
        "412":
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
        "429":
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
        "500":
          description: Profile cannot be updated.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
      x-codegen-request-body-name: body
  /api-profile:
    get:
      summary: Get user's profile stored into the API
      description:
        Returns the profile for the user identified by the provided fiscal
        code.
      operationId: getApiUserProfile
      responses:
        "200":
          description: Found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExtendedProfile"
              example:
                email: email@example.com
                preferred_languages:
                  - it_IT
                is_inbox_enabled: true
                accepted_tos_version: 1
                is_webhook_enabled: true
                is_email_enabled: true
                is_email_validated: true
                is_email_already_taken: false
                version: 1
                sender_allowed: true
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
        "401":
          description: Bearer token null or expired.
          content: {}
        "404":
          description: Profile not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
        "429":
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
        "500":
          description: There was an error in retrieving the user profile.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
  /email-validation-process:
    post:
      summary: Start the Email Validation Process
      description: |-
        Start the email validation process that create the validation token
        and send the validation email
      operationId: startEmailValidationProcess
      responses:
        "202":
          description: Accepted
          content: {}
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
        "401":
          description: Bearer token null or expired.
          content: {}
        "404":
          description: Profile not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
        "429":
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
        "500":
          description: There was an error starting email validation process
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
  /installations/{installationID}:
    put:
      summary: Create or update an Installation
      description: Create or update an Installation to the Azure Notification hub.
      operationId: createOrUpdateInstallation
      parameters:
        - name: installationID
          in: path
          description: The ID of the message.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Installation"
        required: true
      responses:
        "200":
          description: Success.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
              example:
                message: ok
        "401":
          description: Bearer token null or expired.
          content: {}
        "500":
          description:
            There was an error in registering the device to the Notification
            Hub.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
      x-codegen-request-body-name: body
  /sessions:
    get:
      summary: List sessions of a User
      description: Return all the active sessions for an authenticated User.
      operationId: listUserSessions
      responses:
        "200":
          description: Found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionsList"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
        "401":
          description: Bearer token null or expired.
          content: {}
        "500":
          description: Unavailable service
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
  /payment-requests/{rptId}:
    get:
      summary: Get Payment Info
      description: Retrieve information about a payment
      operationId: getPaymentInfo
      parameters:
        - name: rptId
          in: path
          description: Unique identifier for payments.
          required: true
          schema:
            type: string
        - name: test
          in: query
          description: Use test environment of PagoPAClient
          schema:
            type: boolean
      responses:
        "200":
          description: Payment information retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentRequestsGetResponse"
              example:
                importoSingoloVersamento: "200,"
                codiceContestoPagamento: ABC123
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
        "401":
          description: Bearer token null or expired.
          content: {}
        "500":
          description: PagoPA services are not available or request is rejected
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentProblemJson"
        "504":
          description: gateway timeout.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentProblemJson"
  /payment-activations:
    post:
      summary: Activate Payment
      description: Require a lock (activation) for a payment
      operationId: activatePayment
      parameters:
        - name: test
          in: query
          description: Use test environment of PagoPAClient
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentActivationsPostRequest"
        required: true
      responses:
        "200":
          description: Payment activation process started
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentActivationsPostResponse"
              example:
                importoSingoloVersamento: 200
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
        "401":
          description: Bearer token null or expired.
          content: {}
        "500":
          description: PagoPA services are not available or request is rejected
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentProblemJson"
        "504":
          description: gateway timeout.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentProblemJson"
      x-codegen-request-body-name: body
  /payment-activations/{codiceContestoPagamento}:
    get:
      summary: Get Activation status
      description: Check the activation status to retrieve the paymentId
      operationId: getActivationStatus
      parameters:
        - name: codiceContestoPagamento
          in: path
          description: Transaction Id used to identify the communication flow.
          required: true
          schema:
            type: string
        - name: test
          in: query
          description: Use test environment of PagoPAClient
          schema:
            type: boolean
      responses:
        "200":
          description: Payment information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentActivationsGetResponse"
              example:
                idPagamento: "123455"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
        "401":
          description: Bearer token null or expired.
          content: {}
        "404":
          description: Activation status not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
        "500":
          description: Unavailable service
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
  /user-data-processing:
    post:
      summary: Set User's data processing choices
      description:
        Let the authenticated user express his will to retrieve or delete
        his stored data.
      operationId: upsertUserDataProcessing
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserDataProcessingChoiceRequest"
        required: true
      responses:
        "200":
          description: User Data processing created / updated.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDataProcessing"
        "400":
          description: Invalid payload.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
        "401":
          description: Bearer token null or expired.
          content: {}
        "409":
          description: Conflict.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
        "429":
          description: Too may requests
          content: {}
        "500":
          description: User Data processing choice cannot be taken in charge.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
      x-codegen-request-body-name: body
  /user-data-processing/{choice}:
    get:
      summary: Get User's data processing
      description:
        Get the user's request to delete or download his stored data by
        providing a kind of choice.
      operationId: getUserDataProcessing
      parameters:
        - name: choice
          in: path
          description: A representation of a user data processing choice
          required: true
          schema:
            type: string
            enum:
              - DOWNLOAD
              - DELETE
      responses:
        "200":
          description: User data processing retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDataProcessing"
        "401":
          description: Bearer token null or expired.
          content: {}
        "404":
          description: Not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
        "429":
          description: Too many requests
          content: {}
    delete:
      tags:
        - restricted
      summary: Abort User's revious data processing request
      description: "Ask for a request to abort, if present"
      operationId: abortUserDataProcessing
      parameters:
        - name: choice
          in: path
          description: A representation of a user data processing choice
          required: true
          schema:
            type: string
            enum:
              - DOWNLOAD
              - DELETE
      responses:
        "202":
          description: The abort request has been recorded
          content: {}
        "400":
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not Found
          content: {}
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
        "429":
          description: Too many requests
          content: {}
        "500":
          description: Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
components:
  schemas:
    # Definitions from the digital citizenship APIs
    AcceptedTosVersion:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/AcceptedTosVersion"
    AppVersion:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/AppVersion"
    BlockedInboxOrChannels:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/BlockedInboxOrChannels"
    DepartmentName:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/DepartmentName"
    EmailAddress:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/EmailAddress"
    PreferredLanguage:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/PreferredLanguage"
    PreferredLanguages:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/PreferredLanguages"
    Profile:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/Profile"
    ExtendedProfile:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/ExtendedProfile"
    FiscalCode:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/FiscalCode"
    IsEmailEnabled:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/IsEmailEnabled"
    IsInboxEnabled:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/IsInboxEnabled"
    IsEmailValidated:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/IsEmailValidated"
    IsEmailAlreadyTaken:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/IsEmailAlreadyTaken"
    UpdateProfile412ErrorTypes:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/refs/tags/v29.3.0/openapi/problemJson_definitions.yaml#/UpdateProfile412ErrorTypes"
    ReminderStatus:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/ReminderStatus"
    PushNotificationsContentType:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/PushNotificationsContentType"
    IsTestProfile:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/IsTestProfile"
    IsWebhookEnabled:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/IsWebhookEnabled"
    LimitedProfile:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/LimitedProfile"
    MessageResponseNotificationStatus:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/MessageResponseNotificationStatus"
    NotificationChannelStatusValue:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/NotificationChannelStatusValue"
    NotificationChannel:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/NotificationChannel"
    OrganizationFiscalCode:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/OrganizationFiscalCode"
    OrganizationName:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/OrganizationName"
    ProblemJson:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/ProblemJson"
    ServiceId:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/ServiceId"
    ServiceCategory:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/ServiceCategory"
    SpecialServiceCategory:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/SpecialServiceCategory"
    StandardServiceCategory:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/StandardServiceCategory"
    Timestamp:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/Timestamp"
    PaymentNoticeNumber:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/PaymentNoticeNumber"
    PaymentAmount:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/PaymentAmount"
    PaymentData:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/PaymentData"
    TimeToLiveSeconds:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/TimeToLiveSeconds"
    UserDataProcessingStatus:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/UserDataProcessingStatus"
    UserDataProcessingChoice:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/UserDataProcessingChoice"
    UserDataProcessingChoiceRequest:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/UserDataProcessingChoiceRequest"
    UserDataProcessing:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/UserDataProcessing"
    ServicePreferencesSettings:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/ServicePreferencesSettings"
    ServicesPreferencesMode:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/ServicesPreferencesMode"
    BasicServicePreference:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/BasicServicePreference"
    ServicePreference:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/ServicePreference"
    UpsertServicePreference:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/UpsertServicePreference"
    PaginationResponse:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/PaginationResponse"
    Ulid:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/Ulid"
    PathTraversalSafePathParam:
      $ref: "https://raw.githubusercontent.com/pagopa/io-functions-commons/openapi-v3-definitions/openapi/definitions_v3.yaml#/PathTraversalSafePathParam"
    # Definitions from pagopa-proxy
    PaymentProblemJson:
      $ref: "https://raw.githubusercontent.com/pagopa/io-pagopa-proxy/v1.6.0/api-spec/api-for-io.yaml#/definitions/PaymentProblemJson"
    CodiceContestoPagamento:
      $ref: "https://raw.githubusercontent.com/pagopa/io-pagopa-proxy/v1.6.0/api-spec/api-for-io.yaml#/definitions/CodiceContestoPagamento"
    EnteBeneficiario:
      $ref: "https://raw.githubusercontent.com/pagopa/io-pagopa-proxy/v1.6.0/api-spec/api-for-io.yaml#/definitions/EnteBeneficiario"
    Iban:
      $ref: "https://raw.githubusercontent.com/pagopa/io-pagopa-proxy/v1.6.0/api-spec/api-for-io.yaml#/definitions/Iban"
    ImportoEuroCents:
      $ref: "https://raw.githubusercontent.com/pagopa/io-pagopa-proxy/v1.6.0/api-spec/api-for-io.yaml#/definitions/ImportoEuroCents"
    PaymentActivationsGetResponse:
      $ref: "https://raw.githubusercontent.com/pagopa/io-pagopa-proxy/v1.6.0/api-spec/api-for-io.yaml#/definitions/PaymentActivationsGetResponse"
    PaymentActivationsPostRequest:
      $ref: "https://raw.githubusercontent.com/pagopa/io-pagopa-proxy/v1.6.0/api-spec/api-for-io.yaml#/definitions/PaymentActivationsPostRequest"
    PaymentActivationsPostResponse:
      $ref: "https://raw.githubusercontent.com/pagopa/io-pagopa-proxy/v1.6.0/api-spec/api-for-io.yaml#/definitions/PaymentActivationsPostResponse"
    PaymentRequestsGetResponse:
      $ref: "https://raw.githubusercontent.com/pagopa/io-pagopa-proxy/v1.6.0/api-spec/api-for-io.yaml#/definitions/PaymentRequestsGetResponse"
    RptId:
      $ref: "https://raw.githubusercontent.com/pagopa/io-pagopa-proxy/v1.6.0/api-spec/api-for-io.yaml#/definitions/RptId"
    SpezzoneStrutturatoCausaleVersamento:
      $ref: "https://raw.githubusercontent.com/pagopa/io-pagopa-proxy/v1.6.0/api-spec/api-for-io.yaml#/definitions/SpezzoneStrutturatoCausaleVersamento"
    SpezzoniCausaleVersamento:
      $ref: "https://raw.githubusercontent.com/pagopa/io-pagopa-proxy/v1.6.0/api-spec/api-for-io.yaml#/definitions/SpezzoniCausaleVersamento"
    SpezzoniCausaleVersamentoItem:
      $ref: "https://raw.githubusercontent.com/pagopa/io-pagopa-proxy/v1.6.0/api-spec/api-for-io.yaml#/definitions/SpezzoniCausaleVersamentoItem"
    # AssertionRef possible inputs
    AssertionRefSha256:
      type: string
      pattern: ^(sha256-[A-Za-z0-9-_=]{1,44})$
    AssertionRefSha384:
      type: string
      pattern: ^(sha384-[A-Za-z0-9-_=]{1,66})$
    AssertionRefSha512:
      type: string
      pattern: ^(sha512-[A-Za-z0-9-_=]{1,88})$
    AssertionRef:
      x-one-of: true
      allOf:
        - $ref: "#/components/schemas/AssertionRefSha512"
        - $ref: "#/components/schemas/AssertionRefSha384"
        - $ref: "#/components/schemas/AssertionRefSha256"
    Installation:
      type: object
      title: Installation
      description: Describes an app installation.
      properties:
        platform:
          $ref: "#/components/schemas/Platform"
        pushChannel:
          $ref: "#/components/schemas/PushChannel"
      required:
        - platform
        - pushChannel
    InitializedProfile:
      type: object
      title: Initialized profile
      description: Describes the user's profile after it has been stored in the Profile API.
      properties:
        accepted_tos_version:
          $ref: "#/components/schemas/AcceptedTosVersion"
        email:
          $ref: "#/components/schemas/EmailAddress"
        blocked_inbox_or_channels:
          $ref: "#/components/schemas/BlockedInboxOrChannels"
        preferred_languages:
          $ref: "#/components/schemas/PreferredLanguages"
        is_inbox_enabled:
          $ref: "#/components/schemas/IsInboxEnabled"
        is_email_validated:
          $ref: "#/components/schemas/IsEmailValidated"
        is_email_already_taken:
          $ref: "#/components/schemas/IsEmailAlreadyTaken"
        is_email_enabled:
          $ref: "#/components/schemas/IsEmailEnabled"
        reminder_status:
          $ref: "#/components/schemas/ReminderStatus"
        push_notifications_content_type:
          $ref: "#/components/schemas/PushNotificationsContentType"
        is_webhook_enabled:
          $ref: "#/components/schemas/IsWebhookEnabled"
        family_name:
          type: string
        fiscal_code:
          $ref: "#/components/schemas/FiscalCode"
        has_profile:
          $ref: "#/components/schemas/HasProfile"
        last_app_version:
          $ref: "#/components/schemas/AppVersion"
        name:
          type: string
        spid_email:
          $ref: "#/components/schemas/EmailAddress"
        date_of_birth:
          type: string
          format: date
        service_preferences_settings:
          $ref: "#/components/schemas/ServicePreferencesSettings"
        version:
          $ref: "#/components/schemas/Version"
      required:
        - family_name
        - fiscal_code
        - has_profile
        - is_inbox_enabled
        - is_email_enabled
        - is_webhook_enabled
        - name
        - service_preferences_settings
        - version
    SessionInfo:
      type: object
      title: Session info of a user
      description: Decribe a session of an authenticated user.
      properties:
        createdAt:
          $ref: "#/components/schemas/Timestamp"
        sessionToken:
          type: string
      required:
        - createdAt
        - sessionToken
    SessionsList:
      description: Contains all active sessions for an authenticated user.
      type: object
      properties:
        sessions:
          type: array
          items:
            $ref: "#/components/schemas/SessionInfo"
      required:
        - sessions
    InstallationID:
      type: string
      description: |-
        The sixteen octets of an Installation ID are represented as 32 hexadecimal (base 16) digits, displayed in five groups
        separated by hyphens, in the form 8-4-4-4-12 for a total of 36 characters (32 alphanumeric characters and four
        hyphens).
        See https://en.wikipedia.org/wiki/Universally_unique_identifier
      minLength: 1
    HasProfile:
      type: boolean
      default: false
      description: True if the user has a remote profile.
    IsEmailSet:
      type: boolean
      default: false
      description: True if the user has presonalized the email.
    Version:
      type: integer
      description: The entity version.
    Platform:
      type: string
      description: The platform type where the installation happened.
      x-extensible-enum:
        - apns
        - gcm
    PushChannel:
      type: string
      description: |-
        The Push Notification Service handle for this Installation.
        See https://docs.microsoft.com/en-us/azure/notification-hubs/notification-hubs-push-notification-registration-management
    SpidLevel:
      type: string
      description: A SPID level.
      x-extensible-enum:
        - https://www.spid.gov.it/SpidL1
        - https://www.spid.gov.it/SpidL2
        - https://www.spid.gov.it/SpidL3
    SuccessResponse:
      type: object
      properties:
        message:
          type: string
    LimitedFederatedUser:
      title: Federated user
      description: User data needed by federated applications.
      type: object
      properties:
        fiscal_code:
          $ref: "#/components/schemas/FiscalCode"
      required:
        - fiscal_code
    FederatedUser:
      title: Federated user
      description: User data needed by federated applications.
      allOf:
        - type: object
          properties:
            name:
              type: string
            family_name:
              type: string
          required:
            - name
            - family_name
        - $ref: "#/components/schemas/LimitedFederatedUser"
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
