swagger: '2.0'
info:
  version: 9.7.0
  title: IO Bonus API
  contact:
    name: IO team
    url: https://forum.italia.it/c/progetto-io
  x-logo:
    url: https://io.italia.it/assets/img/io-logo-blue.svg
  description: Specification for Bonus API
host: api.io.italia.it
basePath: /api/v1
schemes:
  - https
security:
  - ApiKey: []
paths:
  /bonus/vacanze/eligibility/{fiscalcode}:
    post:
      operationId: startBonusEligibilityCheck
      summary: Start bonus eligibility check (ISEE)
      parameters:
        - $ref: '#/parameters/FiscalCode'
      responses:
        '201':
          description: Request created.
          schema:
            $ref: '#/definitions/InstanceId'
          headers:
            Location:
              type: string
              description: >-
                Location (URL) of created request resource.

                A GET request to this URL returns the request status and
                details.
        '202':
          description: Processing request.
        '401':
          description: Wrong or missing function key.
        '403':
          description: |
            Cannot request a new check since there's already
            an active bonus related to this user
        '409':
          description: 'Conflict: pending request found.'
          schema:
            $ref: '#/definitions/ProblemJson'
        '500':
          description: Service unavailable.
          schema:
            $ref: '#/definitions/ProblemJson'
    get:
      operationId: getBonusEligibilityCheck
      summary: Get eligibility (ISEE) check information for user's bonus
      parameters:
        - $ref: '#/parameters/FiscalCode'
      responses:
        '200':
          description: Eligibility (ISEE) check information for user's bonus
          schema:
            $ref: '#/definitions/EligibilityCheck'
        '202':
          description: Processing request.
        '401':
          description: Wrong or missing function key.
        '404':
          description: Request not found.
        '410':
          description: Request expired
          schema:
            $ref: '#/definitions/DetailResponse'
        '500':
          description: Service unavailable.
          schema:
            $ref: '#/definitions/ProblemJson'
  /bonus/vacanze/activations/{fiscalcode}:
    post:
      operationId: startBonusActivationProcedure
      summary: Start bonus activation request procedure
      parameters:
        - $ref: '#/parameters/FiscalCode'
      responses:
        '201':
          description: Request created.
          schema:
            $ref: '#/definitions/InstanceId'
          headers:
            Location:
              type: string
              description: >-
                Location (URL) of created request resource.

                A GET request to this URL returns the request status and
                details.
        '202':
          description: Processing request.
          schema:
            $ref: '#/definitions/InstanceId'
        '401':
          description: Wrong or missing function key.
        '403':
          description: >
            Cannot activate a new bonus because the user is ineligible to get
            the bonus.

            She must re-initiate the eligibility procedure to refresh her data

            and retry to activate the bonus within 24h since she got the result.
        '409':
          description: |
            Cannot activate a new bonus because another active or redeemed
            bonus related to this user was found.
        '410':
          description: >
            Cannot activate a new bonus because the eligibility data has
            expired.

            She must re-initiate the eligibility procedure to refresh her data

            and retry to activate the bonus within 24h since she got the result.
        '500':
          description: Service unavailable.
          schema:
            $ref: '#/definitions/ProblemJson'
    get:
      operationId: getAllBonusActivations
      summary: |
        Get all IDs of the bonus activations requested by
        the authenticated user or by any between his family member
      parameters:
        - $ref: '#/parameters/FiscalCode'
      responses:
        '200':
          description: |
            List of bonus activations ID belonging to the authenticated user
            or to any member of her family (former and actual).
            Returns an empty array in case there's no record found.
          schema:
            $ref: '#/definitions/PaginatedBonusActivationsCollection'
        '401':
          description: Wrong or missing function key.
        '500':
          description: Service unavailable.
          schema:
            $ref: '#/definitions/ProblemJson'
  /bonus/vacanze/activations/{fiscalcode}/{bonus_id}:
    get:
      operationId: getLatestBonusActivationById
      summary: |
        Get the activation details for the latest version
        of the bonus entity identified by the provided id and fiscal code
      parameters:
        - $ref: '#/parameters/FiscalCode'
        - name: bonus_id
          in: path
          required: true
          description: Bonus activation ID.
          type: string
      responses:
        '200':
          description: Bonus activation details.
          schema:
            $ref: '#/definitions/BonusActivation'
        '202':
          description: Processing request.
          schema:
            $ref: '#/definitions/InstanceId'
        '401':
          description: Wrong or missing function key.
        '404':
          description: No bonus found.
        '500':
          description: Service unavailable.
          schema:
            $ref: '#/definitions/ProblemJson'
parameters:
  FiscalCode:
    name: fiscalcode
    in: path
    type: string
    maxLength: 16
    minLength: 16
    required: true
    description: The fiscal code of the user, all upper case.
    x-example: SPNDNL80R13C555X
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  ApiKey:
    type: apiKey
    name: X-Functions-Key
    in: header
    description: The API key to access this function app.
definitions:
  Timestamp:
    type: string
    format: UTCISODateFromString
    description: A date-time field in ISO-8601 format and UTC timezone.
    x-import: '@pagopa/ts-commons/lib/dates'
    example: '2018-10-13T00:00:00.000Z'
  FiscalCode:
    type: string
    description: User's fiscal code.
    format: FiscalCode
    x-import: '@pagopa/ts-commons/lib/strings'
    example: SPNDNL80R13C555X
  ProblemJson:
    type: object
    properties:
      type:
        type: string
        format: uri
        description: |-
          An absolute URI that identifies the problem type. When dereferenced,
          it SHOULD provide human-readable documentation for the problem type
          (e.g., using HTML).
        default: about:blank
        example: https://example.com/problem/constraint-violation
      title:
        type: string
        description: |-
          A short, summary of the problem type. Written in english and readable
          for engineers (usually not suited for non technical stakeholders and
          not localized); example: Service Unavailable
      status:
        type: integer
        format: int32
        description: >-
          The HTTP status code generated by the origin server for this
          occurrence

          of the problem.
        minimum: 100
        maximum: 600
        exclusiveMaximum: true
        example: 200
      detail:
        type: string
        description: |-
          A human readable explanation specific to this occurrence of the
          problem.
        example: There was an error processing the request
      instance:
        type: string
        format: uri
        description: >-
          An absolute URI that identifies the specific occurrence of the
          problem.

          It may or may not yield further information if dereferenced.
  PaginationResponse:
    type: object
    description: Pagination response parameters.
    properties:
      prev:
        type: string
        description: Contains a value useful to get the previous page
        example: first_id_of_the_page
      next:
        type: string
        description: Contains a value useful to get the next page
        example: last_id_of_the_page
  DetailResponse:
    type: object
    properties:
      detail:
        type: string
    required:
      - detail
  BonusCode:
    description: The unique secret code that identifies a bonus
    type: string
    minLength: 12
    maxLength: 12
    pattern: ^[ACEFGHLMNPRUV3469]{12}$
  FamilyUID:
    description: An hash code that identifies univocally a family
    type: string
    minLength: 1
  InstanceId:
    type: object
    properties:
      id:
        type: string
        minLength: 1
        description: The identifier of the created request.
    required:
      - id
  FamilyMember:
    type: object
    properties:
      fiscal_code:
        $ref: '#/definitions/FiscalCode'
      name:
        type: string
        minLength: 1
      surname:
        type: string
        minLength: 1
    required:
      - fiscal_code
      - name
      - surname
  FamilyMembers:
    type: array
    items:
      $ref: '#/definitions/FamilyMember'
  Dsu:
    type: object
    properties:
      family_members:
        $ref: '#/definitions/FamilyMembers'
      max_amount:
        type: integer
      max_tax_benefit:
        type: integer
      request_id:
        type: integer
        description: IdRichiesta
      isee_type:
        type: string
        description: TipoIndicatoreType
      dsu_protocol_id:
        type: string
        minLength: 1
        description: ProtocolloDSU
      dsu_created_at:
        type: string
        format: date
        description: DataPresentazioneDSU
      has_discrepancies:
        type: boolean
        description: PresenzaDifformita
    required:
      - family_members
      - max_amount
      - max_tax_benefit
      - request_id
      - isee_type
      - dsu_protocol_id
      - dsu_created_at
      - has_discrepancies
  EligibilityCheckSuccessEligible:
    type: object
    title: Eligibility check success
    description: >
      Eligibility check succeeded, we can proceed and send the eligibility
      status.

      Amounts are left undefined when status is INELIGIBLE
    properties:
      id:
        type: string
        minLength: 1
      status:
        type: string
        x-extensible-enum:
          - ELIGIBLE
      valid_before:
        $ref: '#/definitions/Timestamp'
      dsu_request:
        $ref: '#/definitions/Dsu'
    required:
      - id
      - status
      - valid_before
      - dsu_request
  EligibilityCheckSuccessConflict:
    type: object
    title: |
      Eligibility check succeeded but there's already a bonus found
      for this set of family members.
    properties:
      id:
        type: string
        minLength: 1
      status:
        type: string
        x-extensible-enum:
          - CONFLICT
      dsu_request:
        $ref: '#/definitions/Dsu'
    required:
      - id
      - status
      - dsu_request
  EligibilityCheckSuccessIneligible:
    type: object
    title: Eligibility check success
    description: >
      Eligibility check succeeded, we can proceed and send the eligibility
      status.

      Amounts are left undefined when status is INELIGIBLE
    properties:
      id:
        type: string
        minLength: 1
      status:
        type: string
        x-extensible-enum:
          - INELIGIBLE
    required:
      - id
      - status
  EligibilityCheckSuccess:
    x-one-of: true
    allOf:
      - $ref: '#/definitions/EligibilityCheckSuccessEligible'
      - $ref: '#/definitions/EligibilityCheckSuccessConflict'
      - $ref: '#/definitions/EligibilityCheckSuccessIneligible'
  EligibilityCheckFailure:
    type: object
    title: Eligibility check failure
    description: Eligibility check failed because of some INPS internal error
    properties:
      id:
        type: string
        minLength: 1
      error:
        type: string
        description: |
          - INVALID_REQUEST     Request malformed
          - INTERNAL_ERROR      Caller must retry after some timeout
          - DATA_NOT_FOUND      ISEE data not found in INPS database
          - DATABASE_OFFLINE    Caller must retry after some timeout
        x-extensible-enum:
          - INVALID_REQUEST
          - INTERNAL_ERROR
          - DATA_NOT_FOUND
          - DATABASE_OFFLINE
      error_description:
        type: string
      status:
        type: string
        x-extensible-enum:
          - FAILURE
    required:
      - id
      - error
      - error_description
      - status
  EligibilityCheck:
    title: Eligibility check
    description: Eligibility check
    x-one-of: true
    allOf:
      - $ref: '#/definitions/EligibilityCheckSuccess'
      - $ref: '#/definitions/EligibilityCheckFailure'
  BonusActivationStatus:
    type: string
    description: >
      Bonus activation status.

      - PROCESSING  The bonus activation has started;
                    this status is only needed when listing bonus id
                    and does not appear in the bonus details
                    since the request will return HTTP 202 in that case
      - ACTIVE      The bonus has been successfully activated;
                    the bonus activtion procedure can't be restarted anymore
      - FAILED      The bonus activation procedure failed and can be restarted

      - REDEEMED    The bonus is redeemed by the user or by any member of the
      family;
                    the bonus activtion procedure can't be restarted anymore
    x-extensible-enum:
      - PROCESSING
      - ACTIVE
      - FAILED
      - REDEEMED
  BonusActivation:
    type: object
    title: Bonus activation
    description: Bonus activation
    properties:
      id:
        $ref: '#/definitions/BonusCode'
      applicant_fiscal_code:
        $ref: '#/definitions/FiscalCode'
      status:
        $ref: '#/definitions/BonusActivationStatus'
      dsu_request:
        $ref: '#/definitions/Dsu'
      created_at:
        $ref: '#/definitions/Timestamp'
      redeemed_at:
        $ref: '#/definitions/Timestamp'
    required:
      - id
      - applicant_fiscal_code
      - status
      - dsu_request
      - created_at
  BonusActivationWithFamilyUID:
    title: BonusActivation with FamilyUID
    description: >-
      includes the FamilyUID along with BonusActivation for troubleshooting
      reasons
    allOf:
      - $ref: '#/definitions/BonusActivation'
      - type: object
        properties:
          familyUID:
            $ref: '#/definitions/FamilyUID'
        required:
          - familyUID
  BonusActivationItem:
    type: object
    properties:
      id:
        $ref: '#/definitions/BonusCode'
      is_applicant:
        type: boolean
        description: |
          True in case the authenticated user is the applicant for
          the bonus activation identified by the id
    required:
      - id
      - is_applicant
  BonusActivationCollection:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/BonusActivationItem'
    required:
      - items
  PaginatedBonusActivationsCollection:
    allOf:
      - $ref: '#/definitions/BonusActivationCollection'
      - $ref: '#/definitions/PaginationResponse'
  ConsultazioneSogliaIndicatoreInput:
    type: object
    properties:
      CodiceFiscale:
        type: string
        pattern: >-
          ([A-Za-z]{6}\\d{2}[A-Za-z]\\d{2}[A-Za-z][A-Za-z0-9]{3}[A-Za-z])|(\\d{11}
          {0,5})
      CodiceSoglia:
        type: string
        pattern: ([A-Za-z]{4}[0-9]{2})
      FornituraNucleo:
        $ref: '#/definitions/SiNoType'
      DataValidita:
        type: string
        pattern: ( \\d{4}-[01][0-9]-[0123][0-9])
    required:
      - CodiceFiscale
      - CodiceSoglia
      - FornituraNucleo
  ConsultazioneSogliaIndicatoreResponse:
    type: object
    properties:
      IdRichiesta:
        type: integer
      Esito:
        type: string
        enum:
          - OK
          - RICHIESTA_INVALIDA
          - DATI_NON_TROVATI
          - DATABASE_OFFLINE
          - ERRORE_INTERNO
      DescrizioneErrore:
        type: string
      DatiIndicatore:
        $ref: '#/definitions/DatiIndicatore'
    required:
      - IdRichiesta
      - Esito
  DatiIndicatore:
    type: object
    properties:
      Componenti:
        type: array
        minItems: 1
        maxItems: 50
        items:
          $ref: '#/definitions/NucleoType'
        x-nullable: true
      TipoIndicatore:
        type: string
        description: |
          Possible values are
          - ISEE Standard
          - ISEE Minorenne ordinario
          - ISEE Minorenne con componente aggiuntiva
          - ISEE Minorenne con componente attratta
          - ISEE Universitario con componente aggiuntiva
          - ISEE Universitario con componente attratta
          - ISEE Universitario ordinario
          - ISEE Universitario con studente attratto
          - ISEE Universitario con studente attratto e componente aggiuntiva
          - ISEE Universitario con studente attratto e componente attratta
          - ISEE Sociosanitario ridotto
          - ISEE Dottorato ricerca ridotto
          - ISEE Residenziale standard senza figli aggiuntivi
          - ISEE Residenziale standard con figli aggiuntivi
          - ISEE Residenziale ridotto senza figli aggiuntivi
          - ISEE Residenziale ridotto con figli aggiuntivi
      SottoSoglia:
        $ref: '#/definitions/SiNoType'
      ProtocolloDSU:
        type: string
      DataPresentazioneDSU:
        type: string
        format: date
      PresenzaDifformita:
        $ref: '#/definitions/SiNoType'
    required:
      - TipoIndicatore
      - SottoSoglia
      - ProtocolloDSU
      - DataPresentazioneDSU
      - PresenzaDifformita
  NucleoType:
    type: object
    properties:
      CodiceFiscale:
        type: string
        pattern: ([A-Z]{6}\\d{2}[A-Z]\\d{2}[A-Z][A-Z0-9]{3}[A-Z])|(\\d{11} {0,5})
      Cognome:
        type: string
        maxLength: 64
      Nome:
        type: string
        maxLength: 64
    required:
      - CodiceFiscale
      - Cognome
      - Nome
  SiNoType:
    type: string
    enum:
      - SI
      - 'NO'
  FamilyMemberCount:
    description: >-
      Describes the count of members in a family, we also define some sane
      limits
    type: integer
    minimum: 1
    maximum: 50
