node_cache_key: &node_cache_key v1-dependencies-{{ checksum "yarn.lock" }}

# Download and cache dependencies
restore_node_cache: &restore_node_cache
  restore_cache:
    keys:
      - *node_cache_key

# Save node_modules to the cache
save_node_cache: &save_node_cache
  save_cache:
    paths:
      - node_modules
      - ~/.cache/yarn
    key: *node_cache_key

# Install yarn dependencies
install_node_modules: &install_node_modules
  run: yarn install --cache-folder ~/.cache/yarn

version: 2
jobs:
  lint-api:
      docker:
        - image: circleci/node:10.14.2
      working_directory: ~/repo
      steps:
        - checkout
        - run: npm install oval
        - run: npx oval validate -p api_notifications.yaml
        - run: npx oval validate -p api_pagopa.yaml
        - run: npx oval validate -p api_backend.yaml
        - run: npx oval validate -p api_public.yaml
  lint-typescript:
    docker:
      - image: circleci/node:10.14.2

    working_directory: ~/repo

    steps:
      - checkout
      - *restore_node_cache
      - *install_node_modules
      - run: yarn lint
  danger:
    docker:
      - image: circleci/node:10.14.2
    working_directory: ~/repo
    steps:
      - checkout
      - *restore_node_cache
      - *install_node_modules
      - run: '[ -z "$DANGER_GITHUB_API_TOKEN" ] || yarn danger ci'
  build:
    docker:
      - image: circleci/node:10.14.2

    working_directory: ~/repo

    steps:
      - checkout
      - *restore_node_cache
      - *install_node_modules
      - *save_node_cache

      # Install required libraries
      - run: sudo apt-get install libunwind8

      # Generate the proxy API models
      - run: yarn generate:proxy-models

      # Generate certificates
      - run: yarn generate:test-certs
  tests:
    docker:
      - image: circleci/node:10.14.2

    working_directory: ~/repo

    steps:
      - checkout
      - *restore_node_cache
      - *install_node_modules

      # Install required libraries
      - run: sudo apt-get install libunwind8=1.1-4.1

      # Generate the proxy API models
      - run: yarn generate:proxy-models

      # Generate certificates
      - run: yarn generate:test-certs

      # Run tests
      - run: yarn build-noemit
      - run:
          name: Run tests
          command: yarn test
          environment:
            PRE_SHARED_KEY: "12345"
            ALLOW_NOTIFY_IP_SOURCE_RANGE: "::ffff:ac13:1/112"
            ALLOW_PAGOPA_IP_SOURCE_RANGE: "::ffff:ac13:1/112"
            AZURE_NH_HUB_NAME: ""
            AZURE_NH_ENDPOINT: ""
            AUTHENTICATION_BASE_PATH: ""
            API_BASE_PATH: "/api/v1"
            PAGOPA_API_URL: "https://pagopa-proxy"
            PAGOPA_API_URL_TEST: "https://pagopa-proxy-test"
            PAGOPA_BASE_PATH: "/pagopa/api/v1"
            IDP_METADATA_URL: "https://raw.githubusercontent.com/teamdigitale/io-backend/164984224-download-idp-metadata/test_idps/spid-entities-idps.xml"
            REDIS_URL: redis://localhost
      - run: 'bash <(curl -s https://codecov.io/bash)'

workflows:
  version: 2
  build:
    jobs:
      - lint-api
      - lint-typescript
      - danger
      - tests
      - build
